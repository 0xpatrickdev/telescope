syntax = "proto3";
package cosmos.bank.v1beta1;

import "cosmos/base/v1beta1/coin.proto";

// MsgInstantiateContract2 create a new smart contract instance for the given
// code id with a predicable address.
message MsgInstantiateContract2 {
  option (amino.name) = "wasm/MsgInstantiateContract2";
  option (cosmos.msg.v1.signer) = "sender";

  // CodeID is the reference to the stored WASM code
  uint64 code_id = 1 [ (gogoproto.customname) = "CodeID" ];
  // Label is optional metadata to be stored with a contract instance.
  string label = 2;
  // Funds coins that are transferred to the contract on instantiation
  repeated cosmos.base.v1beta1.Coin funds = 3 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true,
    (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins"
  ];
  // Salt is an arbitrary value provided by the sender. Size can be 1 to 64.
  bytes salt = 4;
  // FixMsg include the msg value into the hash for the predictable address.
  // Default is false
  bool fix_msg = 5;
  bool dont_omitempty_fix_msg = 6 [
    (gogoproto.nullable) = false,
    (amino.dont_omitempty) = true
  ];
}