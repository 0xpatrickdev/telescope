{
  "package": "osmosis.lockup",
  "imports": [
    "gogoproto/gogo.proto",
    "cosmos/base/v1beta1/coin.proto",
    "google/api/annotations.proto",
    "google/protobuf/timestamp.proto",
    "google/protobuf/duration.proto",
    "osmosis/lockup/lock.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "osmosis": {
        "nested": {
          "lockup": {
            "options": {
              "go_package": "github.com/osmosis-labs/osmosis/v7/x/lockup/types"
            },
            "nested": {
              "Query": {
                "methods": {
                  "ModuleBalance": {
                    "requestType": "ModuleBalanceRequest",
                    "responseType": "ModuleBalanceResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/module_balance"
                    },
                    "comment": "Return full balance of the module",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/module_balance"
                        }
                      }
                    ]
                  },
                  "ModuleLockedAmount": {
                    "requestType": "ModuleLockedAmountRequest",
                    "responseType": "ModuleLockedAmountResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/module_locked_amount"
                    },
                    "comment": "Return locked balance of the module",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/module_locked_amount"
                        }
                      }
                    ]
                  },
                  "AccountUnlockableCoins": {
                    "requestType": "AccountUnlockableCoinsRequest",
                    "responseType": "AccountUnlockableCoinsResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_unlockable_coins/{owner}"
                    },
                    "comment": "Returns unlockable coins which are not withdrawn yet",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_unlockable_coins/{owner}"
                        }
                      }
                    ]
                  },
                  "AccountUnlockingCoins": {
                    "requestType": "AccountUnlockingCoinsRequest",
                    "responseType": "AccountUnlockingCoinsResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_unlocking_coins/{owner}"
                    },
                    "comment": "Returns unlocking coins",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_unlocking_coins/{owner}"
                        }
                      }
                    ]
                  },
                  "AccountLockedCoins": {
                    "requestType": "AccountLockedCoinsRequest",
                    "responseType": "AccountLockedCoinsResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_locked_coins/{owner}"
                    },
                    "comment": "Return a locked coins that can't be withdrawn",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_locked_coins/{owner}"
                        }
                      }
                    ]
                  },
                  "AccountLockedPastTime": {
                    "requestType": "AccountLockedPastTimeRequest",
                    "responseType": "AccountLockedPastTimeResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_locked_pasttime/{owner}"
                    },
                    "comment": "Returns locked records of an account with unlock time beyond timestamp",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_locked_pasttime/{owner}"
                        }
                      }
                    ]
                  },
                  "AccountLockedPastTimeNotUnlockingOnly": {
                    "requestType": "AccountLockedPastTimeNotUnlockingOnlyRequest",
                    "responseType": "AccountLockedPastTimeNotUnlockingOnlyResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_locked_pasttime_not_unlocking_only/{owner}"
                    },
                    "comment": "Returns locked records of an account with unlock time beyond timestamp\nexcluding tokens started unlocking",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_locked_pasttime_not_unlocking_only/{owner}"
                        }
                      }
                    ]
                  },
                  "AccountUnlockedBeforeTime": {
                    "requestType": "AccountUnlockedBeforeTimeRequest",
                    "responseType": "AccountUnlockedBeforeTimeResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_unlocked_before_time/{owner}"
                    },
                    "comment": "Returns unlocked records with unlock time before timestamp",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_unlocked_before_time/{owner}"
                        }
                      }
                    ]
                  },
                  "AccountLockedPastTimeDenom": {
                    "requestType": "AccountLockedPastTimeDenomRequest",
                    "responseType": "AccountLockedPastTimeDenomResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_locked_pasttime_denom/{owner}"
                    },
                    "comment": "Returns lock records by address, timestamp, denom",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_locked_pasttime_denom/{owner}"
                        }
                      }
                    ]
                  },
                  "LockedDenom": {
                    "requestType": "LockedDenomRequest",
                    "responseType": "LockedDenomResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/locked_denom"
                    },
                    "comment": "Returns total locked per denom with longer past given time",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/locked_denom"
                        }
                      }
                    ]
                  },
                  "LockedByID": {
                    "requestType": "LockedRequest",
                    "responseType": "LockedResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/locked_by_id/{lock_id}"
                    },
                    "comment": "Returns lock record by id",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/locked_by_id/{lock_id}"
                        }
                      }
                    ]
                  },
                  "SyntheticLockupsByLockupID": {
                    "requestType": "SyntheticLockupsByLockupIDRequest",
                    "responseType": "SyntheticLockupsByLockupIDResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/synthetic_lockups_by_lock_id/{lock_id}"
                    },
                    "comment": "Returns synthetic lockups by native lockup id",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/synthetic_lockups_by_lock_id/{lock_id}"
                        }
                      }
                    ]
                  },
                  "AccountLockedLongerDuration": {
                    "requestType": "AccountLockedLongerDurationRequest",
                    "responseType": "AccountLockedLongerDurationResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_locked_longer_duration/{owner}"
                    },
                    "comment": "Returns account locked records with longer duration",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_locked_longer_duration/{owner}"
                        }
                      }
                    ]
                  },
                  "AccountLockedLongerDurationNotUnlockingOnly": {
                    "requestType": "AccountLockedLongerDurationNotUnlockingOnlyRequest",
                    "responseType": "AccountLockedLongerDurationNotUnlockingOnlyResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_locked_longer_duration_not_unlocking_only/{owner}"
                    },
                    "comment": "Returns account locked records with longer duration excluding tokens\nstarted unlocking",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_locked_longer_duration_not_unlocking_only/{owner}"
                        }
                      }
                    ]
                  },
                  "AccountLockedLongerDurationDenom": {
                    "requestType": "AccountLockedLongerDurationDenomRequest",
                    "responseType": "AccountLockedLongerDurationDenomResponse",
                    "options": {
                      "(google.api.http).get": "/osmosis/lockup/v1beta1/account_locked_longer_duration_denom/{owner}"
                    },
                    "comment": "Returns account's locked records for a denom with longer duration",
                    "parsedOptions": [
                      {
                        "(google.api.http)": {
                          "get": "/osmosis/lockup/v1beta1/account_locked_longer_duration_denom/{owner}"
                        }
                      }
                    ]
                  }
                },
                "comment": "Query defines the gRPC querier service."
              },
              "ModuleBalanceRequest": {
                "fields": {},
                "comment": null
              },
              "ModuleBalanceResponse": {
                "fields": {
                  "coins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "ModuleLockedAmountRequest": {
                "fields": {},
                "comment": null
              },
              "ModuleLockedAmountResponse": {
                "fields": {
                  "coins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountUnlockableCoinsRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountUnlockableCoinsResponse": {
                "fields": {
                  "coins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountUnlockingCoinsRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountUnlockingCoinsResponse": {
                "fields": {
                  "coins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedCoinsRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedCoinsResponse": {
                "fields": {
                  "coins": {
                    "rule": "repeated",
                    "type": "cosmos.base.v1beta1.Coin",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false,
                      "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.Coins"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedPastTimeRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  },
                  "timestamp": {
                    "type": "google.protobuf.Timestamp",
                    "id": 2,
                    "options": {
                      "(gogoproto.stdtime)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:timestamp"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedPastTimeResponse": {
                "fields": {
                  "locks": {
                    "rule": "repeated",
                    "type": "PeriodLock",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedPastTimeNotUnlockingOnlyRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  },
                  "timestamp": {
                    "type": "google.protobuf.Timestamp",
                    "id": 2,
                    "options": {
                      "(gogoproto.stdtime)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:timestamp"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedPastTimeNotUnlockingOnlyResponse": {
                "fields": {
                  "locks": {
                    "rule": "repeated",
                    "type": "PeriodLock",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountUnlockedBeforeTimeRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  },
                  "timestamp": {
                    "type": "google.protobuf.Timestamp",
                    "id": 2,
                    "options": {
                      "(gogoproto.stdtime)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:timestamp"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountUnlockedBeforeTimeResponse": {
                "fields": {
                  "locks": {
                    "rule": "repeated",
                    "type": "PeriodLock",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedPastTimeDenomRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  },
                  "timestamp": {
                    "type": "google.protobuf.Timestamp",
                    "id": 2,
                    "options": {
                      "(gogoproto.stdtime)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:timestamp"
                    },
                    "comment": null
                  },
                  "denom": {
                    "type": "string",
                    "id": 3,
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedPastTimeDenomResponse": {
                "fields": {
                  "locks": {
                    "rule": "repeated",
                    "type": "PeriodLock",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "LockedDenomRequest": {
                "fields": {
                  "denom": {
                    "type": "string",
                    "id": 1,
                    "comment": null
                  },
                  "duration": {
                    "type": "google.protobuf.Duration",
                    "id": 2,
                    "options": {
                      "(gogoproto.stdduration)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:duration"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "LockedDenomResponse": {
                "fields": {
                  "amount": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.customtype)": "github.com/cosmos/cosmos-sdk/types.Int",
                      "(gogoproto.moretags)": "yaml:amount",
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "LockedRequest": {
                "fields": {
                  "lockId": {
                    "type": "uint64",
                    "id": 1,
                    "comment": null
                  }
                },
                "comment": null
              },
              "LockedResponse": {
                "fields": {
                  "lock": {
                    "type": "PeriodLock",
                    "id": 1,
                    "comment": null
                  }
                },
                "comment": null
              },
              "SyntheticLockupsByLockupIDRequest": {
                "fields": {
                  "lockId": {
                    "type": "uint64",
                    "id": 1,
                    "comment": null
                  }
                },
                "comment": null
              },
              "SyntheticLockupsByLockupIDResponse": {
                "fields": {
                  "syntheticLocks": {
                    "rule": "repeated",
                    "type": "SyntheticLock",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedLongerDurationRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  },
                  "duration": {
                    "type": "google.protobuf.Duration",
                    "id": 2,
                    "options": {
                      "(gogoproto.stdduration)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:duration"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedLongerDurationResponse": {
                "fields": {
                  "locks": {
                    "rule": "repeated",
                    "type": "PeriodLock",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedLongerDurationNotUnlockingOnlyRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  },
                  "duration": {
                    "type": "google.protobuf.Duration",
                    "id": 2,
                    "options": {
                      "(gogoproto.stdduration)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:duration"
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedLongerDurationNotUnlockingOnlyResponse": {
                "fields": {
                  "locks": {
                    "rule": "repeated",
                    "type": "PeriodLock",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedLongerDurationDenomRequest": {
                "fields": {
                  "owner": {
                    "type": "string",
                    "id": 1,
                    "options": {
                      "(gogoproto.moretags)": "yaml:owner"
                    },
                    "comment": null
                  },
                  "duration": {
                    "type": "google.protobuf.Duration",
                    "id": 2,
                    "options": {
                      "(gogoproto.stdduration)": true,
                      "(gogoproto.nullable)": false,
                      "(gogoproto.moretags)": "yaml:duration"
                    },
                    "comment": null
                  },
                  "denom": {
                    "type": "string",
                    "id": 3,
                    "comment": null
                  }
                },
                "comment": null
              },
              "AccountLockedLongerDurationDenomResponse": {
                "fields": {
                  "locks": {
                    "rule": "repeated",
                    "type": "PeriodLock",
                    "id": 1,
                    "options": {
                      "(gogoproto.nullable)": false
                    },
                    "comment": null
                  }
                },
                "comment": null
              }
            }
          }
        }
      }
    }
  }
}