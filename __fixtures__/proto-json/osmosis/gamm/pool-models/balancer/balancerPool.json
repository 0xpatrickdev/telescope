{
  "package": "osmosis.gamm.v1beta1",
  "imports": [
    "cosmos_proto/cosmos.proto",
    "gogoproto/gogo.proto",
    "google/protobuf/duration.proto",
    "google/protobuf/timestamp.proto",
    "cosmos/auth/v1beta1/auth.proto",
    "cosmos/base/v1beta1/coin.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "osmosis": {
        "nested": {
          "gamm": {
            "nested": {
              "v1beta1": {
                "options": {
                  "go_package": "github.com/osmosis-labs/osmosis/v7/x/gamm/pool-models/balancer"
                },
                "nested": {
                  "SmoothWeightChangeParams": {
                    "fields": {
                      "startTime": {
                        "type": "google.protobuf.Timestamp",
                        "id": 1,
                        "options": {
                          "(gogoproto.stdtime)": true,
                          "(gogoproto.nullable)": false,
                          "(gogoproto.moretags)": "yaml:start_time"
                        },
                        "comment": "The start time for beginning the weight change.\nIf a parameter change / pool instantiation leaves this blank,\nit should be generated by the state_machine as the current time."
                      },
                      "duration": {
                        "type": "google.protobuf.Duration",
                        "id": 2,
                        "options": {
                          "(gogoproto.nullable)": false,
                          "(gogoproto.stdduration)": true,
                          "(gogoproto.jsontag)": "duration,omitempty",
                          "(gogoproto.moretags)": "yaml:duration"
                        },
                        "comment": "Duration for the weights to change over"
                      },
                      "initialPoolWeights": {
                        "rule": "repeated",
                        "type": "osmosis.gamm.v1beta1.PoolAsset",
                        "id": 3,
                        "options": {
                          "(gogoproto.moretags)": "yaml:initial_pool_weights",
                          "(gogoproto.nullable)": false
                        },
                        "comment": "The initial pool weights. These are copied from the pool's settings\nat the time of weight change instantiation.\nThe amount PoolAsset.token.amount field is ignored if present,\nfuture type refactorings should just have a type with the denom & weight\nhere."
                      },
                      "targetPoolWeights": {
                        "rule": "repeated",
                        "type": "osmosis.gamm.v1beta1.PoolAsset",
                        "id": 4,
                        "options": {
                          "(gogoproto.moretags)": "yaml:target_pool_weights",
                          "(gogoproto.nullable)": false
                        },
                        "comment": "The target pool weights. The pool weights will change linearly with respect\nto time between start_time, and start_time + duration. The amount\nPoolAsset.token.amount field is ignored if present, future type\nrefactorings should just have a type with the denom & weight here."
                      }
                    },
                    "comment": "Parameters for changing the weights in a balancer pool smoothly from\na start weight and end weight over a period of time.\nCurrently, the only smooth change supported is linear changing between\nthe two weights, but more types may be added in the future.\nWhen these parameters are set, the weight w(t) for pool time `t` is the\nfollowing:\nt <= start_time: w(t) = initial_pool_weights\nstart_time < t <= start_time + duration:\nw(t) = initial_pool_weights + (t - start_time) *\n(target_pool_weights - initial_pool_weights) / (duration)\nt > start_time + duration: w(t) = target_pool_weights"
                  },
                  "PoolParams": {
                    "fields": {
                      "swapFee": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(gogoproto.customtype)": "github.com/cosmos/cosmos-sdk/types.Dec",
                          "(gogoproto.moretags)": "yaml:swap_fee",
                          "(gogoproto.nullable)": false
                        },
                        "comment": null
                      },
                      "exitFee": {
                        "type": "string",
                        "id": 2,
                        "options": {
                          "(gogoproto.customtype)": "github.com/cosmos/cosmos-sdk/types.Dec",
                          "(gogoproto.moretags)": "yaml:exit_fee",
                          "(gogoproto.nullable)": false
                        },
                        "comment": null
                      },
                      "smoothWeightChangeParams": {
                        "type": "SmoothWeightChangeParams",
                        "id": 3,
                        "options": {
                          "(gogoproto.moretags)": "yaml:smooth_weight_change_params",
                          "(gogoproto.nullable)": true
                        },
                        "comment": null
                      }
                    },
                    "comment": "PoolParams defined the parameters that will be managed by the pool\ngovernance in the future. This params are not managed by the chain\ngovernance. Instead they will be managed by the token holders of the pool.\nThe pool's token holders are specified in future_pool_governor."
                  },
                  "PoolAsset": {
                    "fields": {
                      "token": {
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:token",
                          "(gogoproto.nullable)": false
                        },
                        "comment": "Coins we are talking about,\nthe denomination must be unique amongst all PoolAssets for this pool."
                      },
                      "weight": {
                        "type": "string",
                        "id": 2,
                        "options": {
                          "(gogoproto.customtype)": "github.com/cosmos/cosmos-sdk/types.Int",
                          "(gogoproto.moretags)": "yaml:weight",
                          "(gogoproto.nullable)": false
                        },
                        "comment": "Weight that is not normalized. This weight must be less than 2^50"
                      }
                    },
                    "comment": "Pool asset is an internal struct that combines the amount of the\ntoken in the pool, and its balancer weight.\nThis is an awkward packaging of data,\nand should be revisited in a future state migration."
                  },
                  "Pool": {
                    "options": {
                      "(gogoproto.goproto_getters)": false,
                      "(gogoproto.goproto_stringer)": false,
                      "(cosmos_proto.implements_interface)": "PoolI"
                    },
                    "fields": {
                      "address": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(gogoproto.moretags)": "yaml:address"
                        },
                        "comment": null
                      },
                      "id": {
                        "type": "uint64",
                        "id": 2,
                        "comment": null
                      },
                      "poolParams": {
                        "type": "PoolParams",
                        "id": 3,
                        "options": {
                          "(gogoproto.moretags)": "yaml:balancer_pool_params",
                          "(gogoproto.nullable)": false
                        },
                        "comment": null
                      },
                      "futurePoolGovernor": {
                        "type": "string",
                        "id": 4,
                        "options": {
                          "(gogoproto.moretags)": "yaml:future_pool_governor"
                        },
                        "comment": "This string specifies who will govern the pool in the future.\nValid forms of this are:\n{token name},{duration}\n{duration}\nwhere {token name} if specified is the token which determines the\ngovernor, and if not specified is the LP token for this pool.duration is\na time specified as 0w,1w,2w, etc. which specifies how long the token\nwould need to be locked up to count in governance. 0w means no lockup.\nTODO: Further improve these docs"
                      },
                      "totalShares": {
                        "type": "cosmos.base.v1beta1.Coin",
                        "id": 5,
                        "options": {
                          "(gogoproto.moretags)": "yaml:total_shares",
                          "(gogoproto.nullable)": false
                        },
                        "comment": "sum of all LP tokens sent out"
                      },
                      "poolAssets": {
                        "rule": "repeated",
                        "type": "osmosis.gamm.v1beta1.PoolAsset",
                        "id": 6,
                        "options": {
                          "(gogoproto.moretags)": "yaml:pool_assets",
                          "(gogoproto.nullable)": false
                        },
                        "comment": "These are assumed to be sorted by denomiation.\nThey contain the pool asset and the information about the weight"
                      },
                      "totalWeight": {
                        "type": "string",
                        "id": 7,
                        "options": {
                          "(gogoproto.customtype)": "github.com/cosmos/cosmos-sdk/types.Int",
                          "(gogoproto.moretags)": "yaml:total_weight",
                          "(gogoproto.nullable)": false
                        },
                        "comment": "sum of all non-normalized pool weights"
                      }
                    },
                    "comment": null
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}