{
  "package": "cosmos.distribution.v1beta1",
  "imports": [
    "cosmos/base/query/v1beta1/pagination.proto",
    "gogoproto/gogo.proto",
    "google/api/annotations.proto",
    "cosmos/base/v1beta1/coin.proto",
    "cosmos/distribution/v1beta1/distribution.proto",
    "cosmos_proto/cosmos.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "cosmos": {
        "nested": {
          "distribution": {
            "nested": {
              "v1beta1": {
                "options": {
                  "go_package": "github.com/cosmos/cosmos-sdk/x/distribution/types"
                },
                "nested": {
                  "Query": {
                    "methods": {
                      "Params": {
                        "requestType": "QueryParamsRequest",
                        "responseType": "QueryParamsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/params"
                        },
                        "comment": "Params queries params of the distribution module.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/params"
                            }
                          }
                        ]
                      },
                      "ValidatorOutstandingRewards": {
                        "requestType": "QueryValidatorOutstandingRewardsRequest",
                        "responseType": "QueryValidatorOutstandingRewardsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards"
                        },
                        "comment": "ValidatorOutstandingRewards queries rewards of a validator address.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/validators/{validator_address}/outstanding_rewards"
                            }
                          }
                        ]
                      },
                      "ValidatorCommission": {
                        "requestType": "QueryValidatorCommissionRequest",
                        "responseType": "QueryValidatorCommissionResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/validators/{validator_address}/commission"
                        },
                        "comment": "ValidatorCommission queries accumulated commission for a validator.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/validators/{validator_address}/commission"
                            }
                          }
                        ]
                      },
                      "ValidatorSlashes": {
                        "requestType": "QueryValidatorSlashesRequest",
                        "responseType": "QueryValidatorSlashesResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes"
                        },
                        "comment": "ValidatorSlashes queries slash events of a validator.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/validators/{validator_address}/slashes"
                            }
                          }
                        ]
                      },
                      "DelegationRewards": {
                        "requestType": "QueryDelegationRewardsRequest",
                        "responseType": "QueryDelegationRewardsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}"
                        },
                        "comment": "DelegationRewards queries the total rewards accrued by a delegation.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards/{validator_address}"
                            }
                          }
                        ]
                      },
                      "DelegationTotalRewards": {
                        "requestType": "QueryDelegationTotalRewardsRequest",
                        "responseType": "QueryDelegationTotalRewardsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards"
                        },
                        "comment": "DelegationTotalRewards queries the total rewards accrued by a each\nvalidator.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/rewards"
                            }
                          }
                        ]
                      },
                      "DelegatorValidators": {
                        "requestType": "QueryDelegatorValidatorsRequest",
                        "responseType": "QueryDelegatorValidatorsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators"
                        },
                        "comment": "DelegatorValidators queries the validators of a delegator.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/validators"
                            }
                          }
                        ]
                      },
                      "DelegatorWithdrawAddress": {
                        "requestType": "QueryDelegatorWithdrawAddressRequest",
                        "responseType": "QueryDelegatorWithdrawAddressResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address"
                        },
                        "comment": "DelegatorWithdrawAddress queries withdraw address of a delegator.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/delegators/{delegator_address}/withdraw_address"
                            }
                          }
                        ]
                      },
                      "CommunityPool": {
                        "requestType": "QueryCommunityPoolRequest",
                        "responseType": "QueryCommunityPoolResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/distribution/v1beta1/community_pool"
                        },
                        "comment": "CommunityPool queries the community pool coins.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/distribution/v1beta1/community_pool"
                            }
                          }
                        ]
                      }
                    },
                    "comment": "Query defines the gRPC querier service for distribution module."
                  },
                  "QueryParamsRequest": {
                    "fields": {},
                    "comment": "QueryParamsRequest is the request type for the Query/Params RPC method."
                  },
                  "QueryParamsResponse": {
                    "fields": {
                      "params": {
                        "type": "Params",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        },
                        "comment": "params defines the parameters of the module."
                      }
                    },
                    "comment": "QueryParamsResponse is the response type for the Query/Params RPC method."
                  },
                  "QueryValidatorOutstandingRewardsRequest": {
                    "fields": {
                      "validatorAddress": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "validator_address defines the validator address to query for."
                      }
                    },
                    "comment": "QueryValidatorOutstandingRewardsRequest is the request type for the\nQuery/ValidatorOutstandingRewards RPC method."
                  },
                  "QueryValidatorOutstandingRewardsResponse": {
                    "fields": {
                      "rewards": {
                        "type": "ValidatorOutstandingRewards",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        },
                        "comment": null
                      }
                    },
                    "comment": "QueryValidatorOutstandingRewardsResponse is the response type for the\nQuery/ValidatorOutstandingRewards RPC method."
                  },
                  "QueryValidatorCommissionRequest": {
                    "fields": {
                      "validatorAddress": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "validator_address defines the validator address to query for."
                      }
                    },
                    "comment": "QueryValidatorCommissionRequest is the request type for the\nQuery/ValidatorCommission RPC method"
                  },
                  "QueryValidatorCommissionResponse": {
                    "fields": {
                      "commission": {
                        "type": "ValidatorAccumulatedCommission",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        },
                        "comment": "commission defines the commision the validator received."
                      }
                    },
                    "comment": "QueryValidatorCommissionResponse is the response type for the\nQuery/ValidatorCommission RPC method"
                  },
                  "QueryValidatorSlashesRequest": {
                    "options": {
                      "(gogoproto.goproto_getters)": false,
                      "(gogoproto.goproto_stringer)": true
                    },
                    "fields": {
                      "validatorAddress": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "validator_address defines the validator address to query for."
                      },
                      "startingHeight": {
                        "type": "uint64",
                        "id": 2,
                        "comment": "starting_height defines the optional starting height to query the slashes."
                      },
                      "endingHeight": {
                        "type": "uint64",
                        "id": 3,
                        "comment": "starting_height defines the optional ending height to query the slashes."
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 4,
                        "comment": "pagination defines an optional pagination for the request."
                      }
                    },
                    "comment": "QueryValidatorSlashesRequest is the request type for the\nQuery/ValidatorSlashes RPC method"
                  },
                  "QueryValidatorSlashesResponse": {
                    "fields": {
                      "slashes": {
                        "rule": "repeated",
                        "type": "ValidatorSlashEvent",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        },
                        "comment": "slashes defines the slashes the validator received."
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2,
                        "comment": "pagination defines the pagination in the response."
                      }
                    },
                    "comment": "QueryValidatorSlashesResponse is the response type for the\nQuery/ValidatorSlashes RPC method."
                  },
                  "QueryDelegationRewardsRequest": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "delegatorAddress": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "delegator_address defines the delegator address to query for."
                      },
                      "validatorAddress": {
                        "type": "string",
                        "id": 2,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "validator_address defines the validator address to query for."
                      }
                    },
                    "comment": "QueryDelegationRewardsRequest is the request type for the\nQuery/DelegationRewards RPC method."
                  },
                  "QueryDelegationRewardsResponse": {
                    "fields": {
                      "rewards": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.DecCoin",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false,
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.DecCoins"
                        },
                        "comment": "rewards defines the rewards accrued by a delegation."
                      }
                    },
                    "comment": "QueryDelegationRewardsResponse is the response type for the\nQuery/DelegationRewards RPC method."
                  },
                  "QueryDelegationTotalRewardsRequest": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "delegatorAddress": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "delegator_address defines the delegator address to query for."
                      }
                    },
                    "comment": "QueryDelegationTotalRewardsRequest is the request type for the\nQuery/DelegationTotalRewards RPC method."
                  },
                  "QueryDelegationTotalRewardsResponse": {
                    "fields": {
                      "rewards": {
                        "rule": "repeated",
                        "type": "DelegationDelegatorReward",
                        "id": 1,
                        "options": {
                          "(gogoproto.nullable)": false
                        },
                        "comment": "rewards defines all the rewards accrued by a delegator."
                      },
                      "total": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.DecCoin",
                        "id": 2,
                        "options": {
                          "(gogoproto.nullable)": false,
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.DecCoins"
                        },
                        "comment": "total defines the sum of all the rewards."
                      }
                    },
                    "comment": "QueryDelegationTotalRewardsResponse is the response type for the\nQuery/DelegationTotalRewards RPC method."
                  },
                  "QueryDelegatorValidatorsRequest": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "delegatorAddress": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "delegator_address defines the delegator address to query for."
                      }
                    },
                    "comment": "QueryDelegatorValidatorsRequest is the request type for the\nQuery/DelegatorValidators RPC method."
                  },
                  "QueryDelegatorValidatorsResponse": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "validators": {
                        "rule": "repeated",
                        "type": "string",
                        "id": 1,
                        "comment": "validators defines the validators a delegator is delegating for."
                      }
                    },
                    "comment": "QueryDelegatorValidatorsResponse is the response type for the\nQuery/DelegatorValidators RPC method."
                  },
                  "QueryDelegatorWithdrawAddressRequest": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "delegatorAddress": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "delegator_address defines the delegator address to query for."
                      }
                    },
                    "comment": "QueryDelegatorWithdrawAddressRequest is the request type for the\nQuery/DelegatorWithdrawAddress RPC method."
                  },
                  "QueryDelegatorWithdrawAddressResponse": {
                    "options": {
                      "(gogoproto.equal)": false,
                      "(gogoproto.goproto_getters)": false
                    },
                    "fields": {
                      "withdrawAddress": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": "withdraw_address defines the delegator address to query for."
                      }
                    },
                    "comment": "QueryDelegatorWithdrawAddressResponse is the response type for the\nQuery/DelegatorWithdrawAddress RPC method."
                  },
                  "QueryCommunityPoolRequest": {
                    "fields": {},
                    "comment": "QueryCommunityPoolRequest is the request type for the Query/CommunityPool RPC\nmethod."
                  },
                  "QueryCommunityPoolResponse": {
                    "fields": {
                      "pool": {
                        "rule": "repeated",
                        "type": "cosmos.base.v1beta1.DecCoin",
                        "id": 1,
                        "options": {
                          "(gogoproto.castrepeated)": "github.com/cosmos/cosmos-sdk/types.DecCoins",
                          "(gogoproto.nullable)": false
                        },
                        "comment": "pool defines community pool's coins."
                      }
                    },
                    "comment": "QueryCommunityPoolResponse is the response type for the Query/CommunityPool\nRPC method."
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}