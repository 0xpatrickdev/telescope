{
  "package": "cosmos.authz.v1beta1",
  "imports": [
    "google/api/annotations.proto",
    "cosmos/base/query/v1beta1/pagination.proto",
    "cosmos/authz/v1beta1/authz.proto",
    "cosmos_proto/cosmos.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "cosmos": {
        "nested": {
          "authz": {
            "nested": {
              "v1beta1": {
                "options": {
                  "go_package": "github.com/cosmos/cosmos-sdk/x/authz"
                },
                "nested": {
                  "Query": {
                    "methods": {
                      "Grants": {
                        "requestType": "QueryGrantsRequest",
                        "responseType": "QueryGrantsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/authz/v1beta1/grants"
                        },
                        "comment": "Returns list of `Authorization`, granted to the grantee by the granter.",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/authz/v1beta1/grants"
                            }
                          }
                        ]
                      },
                      "GranterGrants": {
                        "requestType": "QueryGranterGrantsRequest",
                        "responseType": "QueryGranterGrantsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/authz/v1beta1/grants/granter/{granter}"
                        },
                        "comment": "GranterGrants returns list of `GrantAuthorization`, granted by granter.\n\nSince: cosmos-sdk 0.46",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/authz/v1beta1/grants/granter/{granter}"
                            }
                          }
                        ]
                      },
                      "GranteeGrants": {
                        "requestType": "QueryGranteeGrantsRequest",
                        "responseType": "QueryGranteeGrantsResponse",
                        "options": {
                          "(google.api.http).get": "/cosmos/authz/v1beta1/grants/grantee/{grantee}"
                        },
                        "comment": "GranteeGrants returns a list of `GrantAuthorization` by grantee.\n\nSince: cosmos-sdk 0.46",
                        "parsedOptions": [
                          {
                            "(google.api.http)": {
                              "get": "/cosmos/authz/v1beta1/grants/grantee/{grantee}"
                            }
                          }
                        ]
                      }
                    },
                    "comment": "Query defines the gRPC querier service."
                  },
                  "QueryGrantsRequest": {
                    "fields": {
                      "granter": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": null
                      },
                      "grantee": {
                        "type": "string",
                        "id": 2,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": null
                      },
                      "msgTypeUrl": {
                        "type": "string",
                        "id": 3,
                        "comment": "Optional, msg_type_url, when set, will query only grants matching given msg type."
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 4,
                        "comment": "pagination defines an pagination for the request."
                      }
                    },
                    "comment": "QueryGrantsRequest is the request type for the Query/Grants RPC method."
                  },
                  "QueryGrantsResponse": {
                    "fields": {
                      "grants": {
                        "rule": "repeated",
                        "type": "Grant",
                        "id": 1,
                        "comment": "authorizations is a list of grants granted for grantee by granter."
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2,
                        "comment": "pagination defines an pagination for the response."
                      }
                    },
                    "comment": "QueryGrantsResponse is the response type for the Query/Authorizations RPC method."
                  },
                  "QueryGranterGrantsRequest": {
                    "fields": {
                      "granter": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": null
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 2,
                        "comment": "pagination defines an pagination for the request."
                      }
                    },
                    "comment": "QueryGranterGrantsRequest is the request type for the Query/GranterGrants RPC method."
                  },
                  "QueryGranterGrantsResponse": {
                    "fields": {
                      "grants": {
                        "rule": "repeated",
                        "type": "GrantAuthorization",
                        "id": 1,
                        "comment": "grants is a list of grants granted by the granter."
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2,
                        "comment": "pagination defines an pagination for the response."
                      }
                    },
                    "comment": "QueryGranterGrantsResponse is the response type for the Query/GranterGrants RPC method."
                  },
                  "QueryGranteeGrantsRequest": {
                    "fields": {
                      "grantee": {
                        "type": "string",
                        "id": 1,
                        "options": {
                          "(cosmos_proto.scalar)": "cosmos.AddressString"
                        },
                        "comment": null
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageRequest",
                        "id": 2,
                        "comment": "pagination defines an pagination for the request."
                      }
                    },
                    "comment": "QueryGranteeGrantsRequest is the request type for the Query/IssuedGrants RPC method."
                  },
                  "QueryGranteeGrantsResponse": {
                    "fields": {
                      "grants": {
                        "rule": "repeated",
                        "type": "GrantAuthorization",
                        "id": 1,
                        "comment": "grants is a list of grants granted to the grantee."
                      },
                      "pagination": {
                        "type": "cosmos.base.query.v1beta1.PageResponse",
                        "id": 2,
                        "comment": "pagination defines an pagination for the response."
                      }
                    },
                    "comment": "QueryGranteeGrantsResponse is the response type for the Query/GranteeGrants RPC method."
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}