{
  "package": "google.api.servicemanagement.v1",
  "imports": [
    "google/api/annotations.proto",
    "google/api/client.proto",
    "google/api/field_behavior.proto",
    "google/api/service.proto",
    "google/api/servicemanagement/v1/resources.proto",
    "google/longrunning/operations.proto",
    "google/protobuf/any.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "google": {
        "nested": {
          "api": {
            "nested": {
              "servicemanagement": {
                "nested": {
                  "v1": {
                    "options": {
                      "csharp_namespace": "Google.Cloud.ServiceManagement.V1",
                      "go_package": "google.golang.org/genproto/googleapis/api/servicemanagement/v1;servicemanagement",
                      "java_multiple_files": true,
                      "java_outer_classname": "ServiceManagerProto",
                      "java_package": "com.google.api.servicemanagement.v1",
                      "objc_class_prefix": "GASM",
                      "php_namespace": "Google\\Cloud\\ServiceManagement\\V1",
                      "ruby_package": "Google::Cloud::ServiceManagement::V1"
                    },
                    "nested": {
                      "ServiceManager": {
                        "options": {
                          "(google.api.default_host)": "servicemanagement.googleapis.com",
                          "(google.api.oauth_scopes)": "https://www.googleapis.com/auth/cloud-platform,https://www.googleapis.com/auth/cloud-platform.read-only,https://www.googleapis.com/auth/service.management,https://www.googleapis.com/auth/service.management.readonly"
                        },
                        "methods": {
                          "ListServices": {
                            "requestType": "ListServicesRequest",
                            "responseType": "ListServicesResponse",
                            "options": {
                              "(google.api.http).get": "/v1/services",
                              "(google.api.method_signature)": "producer_project_id,consumer_id"
                            },
                            "comment": "Lists managed services.\n\nReturns all public services. For authenticated users, also returns all\nservices the calling user has \"servicemanagement.services.get\" permission\nfor.",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "get": "/v1/services"
                                }
                              },
                              {
                                "(google.api.method_signature)": "producer_project_id,consumer_id"
                              }
                            ]
                          },
                          "GetService": {
                            "requestType": "GetServiceRequest",
                            "responseType": "ManagedService",
                            "options": {
                              "(google.api.http).get": "/v1/services/{service_name}",
                              "(google.api.method_signature)": "service_name"
                            },
                            "comment": "Gets a managed service. Authentication is required unless the service is\npublic.",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "get": "/v1/services/{service_name}"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name"
                              }
                            ]
                          },
                          "CreateService": {
                            "requestType": "CreateServiceRequest",
                            "responseType": "google.longrunning.Operation",
                            "options": {
                              "(google.api.http).post": "/v1/services",
                              "(google.api.http).body": "service",
                              "(google.api.method_signature)": "service",
                              "(google.longrunning.operation_info).response_type": "google.api.servicemanagement.v1.ManagedService",
                              "(google.longrunning.operation_info).metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                            },
                            "comment": "Creates a new managed service.\n\nA managed service is immutable, and is subject to mandatory 30-day\ndata retention. You cannot move a service or recreate it within 30 days\nafter deletion.\n\nOne producer project can own no more than 500 services. For security and\nreliability purposes, a production service should be hosted in a\ndedicated producer project.\n\nOperation<response: ManagedService>",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "post": "/v1/services",
                                  "body": "service"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service"
                              },
                              {
                                "(google.longrunning.operation_info)": {
                                  "response_type": "google.api.servicemanagement.v1.ManagedService",
                                  "metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                                }
                              }
                            ]
                          },
                          "DeleteService": {
                            "requestType": "DeleteServiceRequest",
                            "responseType": "google.longrunning.Operation",
                            "options": {
                              "(google.api.http).delete": "/v1/services/{service_name}",
                              "(google.api.method_signature)": "service_name",
                              "(google.longrunning.operation_info).response_type": "google.protobuf.Empty",
                              "(google.longrunning.operation_info).metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                            },
                            "comment": "Deletes a managed service. This method will change the service to the\n`Soft-Delete` state for 30 days. Within this period, service producers may\ncall [UndeleteService][google.api.servicemanagement.v1.ServiceManager.UndeleteService] to restore the service.\nAfter 30 days, the service will be permanently deleted.\n\nOperation<response: google.protobuf.Empty>",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "delete": "/v1/services/{service_name}"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name"
                              },
                              {
                                "(google.longrunning.operation_info)": {
                                  "response_type": "google.protobuf.Empty",
                                  "metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                                }
                              }
                            ]
                          },
                          "UndeleteService": {
                            "requestType": "UndeleteServiceRequest",
                            "responseType": "google.longrunning.Operation",
                            "options": {
                              "(google.api.http).post": "/v1/services/{service_name}:undelete",
                              "(google.api.method_signature)": "service_name",
                              "(google.longrunning.operation_info).response_type": "google.api.servicemanagement.v1.UndeleteServiceResponse",
                              "(google.longrunning.operation_info).metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                            },
                            "comment": "Revives a previously deleted managed service. The method restores the\nservice using the configuration at the time the service was deleted.\nThe target service must exist and must have been deleted within the\nlast 30 days.\n\nOperation<response: UndeleteServiceResponse>",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "post": "/v1/services/{service_name}:undelete"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name"
                              },
                              {
                                "(google.longrunning.operation_info)": {
                                  "response_type": "google.api.servicemanagement.v1.UndeleteServiceResponse",
                                  "metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                                }
                              }
                            ]
                          },
                          "ListServiceConfigs": {
                            "requestType": "ListServiceConfigsRequest",
                            "responseType": "ListServiceConfigsResponse",
                            "options": {
                              "(google.api.http).get": "/v1/services/{service_name}/configs",
                              "(google.api.method_signature)": "service_name"
                            },
                            "comment": "Lists the history of the service configuration for a managed service,\nfrom the newest to the oldest.",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "get": "/v1/services/{service_name}/configs"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name"
                              }
                            ]
                          },
                          "GetServiceConfig": {
                            "requestType": "GetServiceConfigRequest",
                            "responseType": "google.api.Service",
                            "options": {
                              "(google.api.http).get": "/v1/services/{service_name}/configs/{config_id}",
                              "(google.api.http).additional_bindings.get": "/v1/services/{service_name}/config",
                              "(google.api.method_signature)": "service_name,config_id,view"
                            },
                            "comment": "Gets a service configuration (version) for a managed service.",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "get": "/v1/services/{service_name}/configs/{config_id}",
                                  "additional_bindings": {
                                    "get": "/v1/services/{service_name}/config"
                                  }
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name,config_id,view"
                              }
                            ]
                          },
                          "CreateServiceConfig": {
                            "requestType": "CreateServiceConfigRequest",
                            "responseType": "google.api.Service",
                            "options": {
                              "(google.api.http).post": "/v1/services/{service_name}/configs",
                              "(google.api.http).body": "service_config",
                              "(google.api.method_signature)": "service_name,service_config"
                            },
                            "comment": "Creates a new service configuration (version) for a managed service.\nThis method only stores the service configuration. To roll out the service\nconfiguration to backend systems please call\n[CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].\n\nOnly the 100 most recent service configurations and ones referenced by\nexisting rollouts are kept for each service. The rest will be deleted\neventually.",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "post": "/v1/services/{service_name}/configs",
                                  "body": "service_config"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name,service_config"
                              }
                            ]
                          },
                          "SubmitConfigSource": {
                            "requestType": "SubmitConfigSourceRequest",
                            "responseType": "google.longrunning.Operation",
                            "options": {
                              "(google.api.http).post": "/v1/services/{service_name}/configs:submit",
                              "(google.api.http).body": "*",
                              "(google.api.method_signature)": "service_name,config_source,validate_only",
                              "(google.longrunning.operation_info).response_type": "google.api.servicemanagement.v1.SubmitConfigSourceResponse",
                              "(google.longrunning.operation_info).metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                            },
                            "comment": "Creates a new service configuration (version) for a managed service based\non\nuser-supplied configuration source files (for example: OpenAPI\nSpecification). This method stores the source configurations as well as the\ngenerated service configuration. To rollout the service configuration to\nother services,\nplease call [CreateServiceRollout][google.api.servicemanagement.v1.ServiceManager.CreateServiceRollout].\n\nOnly the 100 most recent configuration sources and ones referenced by\nexisting service configurtions are kept for each service. The rest will be\ndeleted eventually.\n\nOperation<response: SubmitConfigSourceResponse>",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "post": "/v1/services/{service_name}/configs:submit",
                                  "body": "*"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name,config_source,validate_only"
                              },
                              {
                                "(google.longrunning.operation_info)": {
                                  "response_type": "google.api.servicemanagement.v1.SubmitConfigSourceResponse",
                                  "metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                                }
                              }
                            ]
                          },
                          "ListServiceRollouts": {
                            "requestType": "ListServiceRolloutsRequest",
                            "responseType": "ListServiceRolloutsResponse",
                            "options": {
                              "(google.api.http).get": "/v1/services/{service_name}/rollouts",
                              "(google.api.method_signature)": "service_name,filter"
                            },
                            "comment": "Lists the history of the service configuration rollouts for a managed\nservice, from the newest to the oldest.",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "get": "/v1/services/{service_name}/rollouts"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name,filter"
                              }
                            ]
                          },
                          "GetServiceRollout": {
                            "requestType": "GetServiceRolloutRequest",
                            "responseType": "Rollout",
                            "options": {
                              "(google.api.http).get": "/v1/services/{service_name}/rollouts/{rollout_id}",
                              "(google.api.method_signature)": "service_name,rollout_id"
                            },
                            "comment": "Gets a service configuration [rollout][google.api.servicemanagement.v1.Rollout].",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "get": "/v1/services/{service_name}/rollouts/{rollout_id}"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name,rollout_id"
                              }
                            ]
                          },
                          "CreateServiceRollout": {
                            "requestType": "CreateServiceRolloutRequest",
                            "responseType": "google.longrunning.Operation",
                            "options": {
                              "(google.api.http).post": "/v1/services/{service_name}/rollouts",
                              "(google.api.http).body": "rollout",
                              "(google.api.method_signature)": "service_name,rollout",
                              "(google.longrunning.operation_info).response_type": "google.api.servicemanagement.v1.Rollout",
                              "(google.longrunning.operation_info).metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                            },
                            "comment": "Creates a new service configuration rollout. Based on rollout, the\nGoogle Service Management will roll out the service configurations to\ndifferent backend services. For example, the logging configuration will be\npushed to Google Cloud Logging.\n\nPlease note that any previous pending and running Rollouts and associated\nOperations will be automatically cancelled so that the latest Rollout will\nnot be blocked by previous Rollouts.\n\nOnly the 100 most recent (in any state) and the last 10 successful (if not\nalready part of the set of 100 most recent) rollouts are kept for each\nservice. The rest will be deleted eventually.\n\nOperation<response: Rollout>",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "post": "/v1/services/{service_name}/rollouts",
                                  "body": "rollout"
                                }
                              },
                              {
                                "(google.api.method_signature)": "service_name,rollout"
                              },
                              {
                                "(google.longrunning.operation_info)": {
                                  "response_type": "google.api.servicemanagement.v1.Rollout",
                                  "metadata_type": "google.api.servicemanagement.v1.OperationMetadata"
                                }
                              }
                            ]
                          },
                          "GenerateConfigReport": {
                            "requestType": "GenerateConfigReportRequest",
                            "responseType": "GenerateConfigReportResponse",
                            "options": {
                              "(google.api.http).post": "/v1/services:generateConfigReport",
                              "(google.api.http).body": "*",
                              "(google.api.method_signature)": "new_config,old_config"
                            },
                            "comment": "Generates and returns a report (errors, warnings and changes from\nexisting configurations) associated with\nGenerateConfigReportRequest.new_value\n\nIf GenerateConfigReportRequest.old_value is specified,\nGenerateConfigReportRequest will contain a single ChangeReport based on the\ncomparison between GenerateConfigReportRequest.new_value and\nGenerateConfigReportRequest.old_value.\nIf GenerateConfigReportRequest.old_value is not specified, this method\nwill compare GenerateConfigReportRequest.new_value with the last pushed\nservice configuration.",
                            "parsedOptions": [
                              {
                                "(google.api.http)": {
                                  "post": "/v1/services:generateConfigReport",
                                  "body": "*"
                                }
                              },
                              {
                                "(google.api.method_signature)": "new_config,old_config"
                              }
                            ]
                          }
                        },
                        "comment": "[Google Service Management API](/service-management/overview)"
                      },
                      "ListServicesRequest": {
                        "fields": {
                          "producerProjectId": {
                            "type": "string",
                            "id": 1,
                            "comment": "Include services produced by the specified project."
                          },
                          "pageSize": {
                            "type": "int32",
                            "id": 5,
                            "comment": "The max number of items to include in the response list. Page size is 50\nif not specified. Maximum value is 100."
                          },
                          "pageToken": {
                            "type": "string",
                            "id": 6,
                            "comment": "Token identifying which result to start with; returned by a previous list\ncall."
                          },
                          "consumerId": {
                            "type": "string",
                            "id": 7,
                            "options": {
                              "deprecated": true
                            },
                            "comment": "Include services consumed by the specified consumer.\n\nThe Google Service Management implementation accepts the following\nforms:\n- project:<project_id>"
                          }
                        },
                        "comment": "Request message for `ListServices` method."
                      },
                      "ListServicesResponse": {
                        "fields": {
                          "services": {
                            "rule": "repeated",
                            "type": "ManagedService",
                            "id": 1,
                            "comment": "The returned services will only have the name field set."
                          },
                          "nextPageToken": {
                            "type": "string",
                            "id": 2,
                            "comment": "Token that can be passed to `ListServices` to resume a paginated query."
                          }
                        },
                        "comment": "Response message for `ListServices` method."
                      },
                      "GetServiceRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the `ServiceManager` overview for naming\nrequirements.  For example: `example.googleapis.com`."
                          }
                        },
                        "comment": "Request message for `GetService` method."
                      },
                      "CreateServiceRequest": {
                        "fields": {
                          "service": {
                            "type": "ManagedService",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. Initial values for the service resource."
                          }
                        },
                        "comment": "Request message for CreateService method."
                      },
                      "DeleteServiceRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the [overview](/service-management/overview)\nfor naming requirements.  For example: `example.googleapis.com`."
                          }
                        },
                        "comment": "Request message for DeleteService method."
                      },
                      "UndeleteServiceRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service. See the [overview](/service-management/overview)\nfor naming requirements. For example: `example.googleapis.com`."
                          }
                        },
                        "comment": "Request message for UndeleteService method."
                      },
                      "UndeleteServiceResponse": {
                        "fields": {
                          "service": {
                            "type": "ManagedService",
                            "id": 1,
                            "comment": "Revived service resource."
                          }
                        },
                        "comment": "Response message for UndeleteService method."
                      },
                      "GetServiceConfigRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the [overview](/service-management/overview)\nfor naming requirements.  For example: `example.googleapis.com`."
                          },
                          "configId": {
                            "type": "string",
                            "id": 2,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The id of the service configuration resource.\n\nThis field must be specified for the server to return all fields, including\n`SourceInfo`."
                          },
                          "view": {
                            "type": "ConfigView",
                            "id": 3,
                            "comment": "Specifies which parts of the Service Config should be returned in the\nresponse."
                          }
                        },
                        "nested": {
                          "ConfigView": {
                            "values": {
                              "BASIC": 0,
                              "FULL": 1
                            },
                            "comment": null,
                            "comments": {
                              "BASIC": "Server response includes all fields except SourceInfo.",
                              "FULL": "Server response includes all fields including SourceInfo.\nSourceFiles are of type 'google.api.servicemanagement.v1.ConfigFile'\nand are only available for configs created using the\nSubmitConfigSource method."
                            }
                          }
                        },
                        "comment": "Request message for GetServiceConfig method."
                      },
                      "ListServiceConfigsRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the [overview](/service-management/overview)\nfor naming requirements.  For example: `example.googleapis.com`."
                          },
                          "pageToken": {
                            "type": "string",
                            "id": 2,
                            "comment": "The token of the page to retrieve."
                          },
                          "pageSize": {
                            "type": "int32",
                            "id": 3,
                            "comment": "The max number of items to include in the response list. Page size is 50\nif not specified. Maximum value is 100."
                          }
                        },
                        "comment": "Request message for ListServiceConfigs method."
                      },
                      "ListServiceConfigsResponse": {
                        "fields": {
                          "serviceConfigs": {
                            "rule": "repeated",
                            "type": "google.api.Service",
                            "id": 1,
                            "comment": "The list of service configuration resources."
                          },
                          "nextPageToken": {
                            "type": "string",
                            "id": 2,
                            "comment": "The token of the next page of results."
                          }
                        },
                        "comment": "Response message for ListServiceConfigs method."
                      },
                      "CreateServiceConfigRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the [overview](/service-management/overview)\nfor naming requirements.  For example: `example.googleapis.com`."
                          },
                          "serviceConfig": {
                            "type": "google.api.Service",
                            "id": 2,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The service configuration resource."
                          }
                        },
                        "comment": "Request message for CreateServiceConfig method."
                      },
                      "SubmitConfigSourceRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the [overview](/service-management/overview)\nfor naming requirements.  For example: `example.googleapis.com`."
                          },
                          "configSource": {
                            "type": "ConfigSource",
                            "id": 2,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The source configuration for the service."
                          },
                          "validateOnly": {
                            "type": "bool",
                            "id": 3,
                            "options": {
                              "(google.api.field_behavior)": "OPTIONAL"
                            },
                            "comment": "Optional. If set, this will result in the generation of a\n`google.api.Service` configuration based on the `ConfigSource` provided,\nbut the generated config and the sources will NOT be persisted."
                          }
                        },
                        "comment": "Request message for SubmitConfigSource method."
                      },
                      "SubmitConfigSourceResponse": {
                        "fields": {
                          "serviceConfig": {
                            "type": "google.api.Service",
                            "id": 1,
                            "comment": "The generated service configuration."
                          }
                        },
                        "comment": "Response message for SubmitConfigSource method."
                      },
                      "CreateServiceRolloutRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the [overview](/service-management/overview)\nfor naming requirements.  For example: `example.googleapis.com`."
                          },
                          "rollout": {
                            "type": "Rollout",
                            "id": 2,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The rollout resource. The `service_name` field is output only."
                          }
                        },
                        "comment": "Request message for 'CreateServiceRollout'"
                      },
                      "ListServiceRolloutsRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the [overview](/service-management/overview)\nfor naming requirements.  For example: `example.googleapis.com`."
                          },
                          "pageToken": {
                            "type": "string",
                            "id": 2,
                            "comment": "The token of the page to retrieve."
                          },
                          "pageSize": {
                            "type": "int32",
                            "id": 3,
                            "comment": "The max number of items to include in the response list. Page size is 50\nif not specified. Maximum value is 100."
                          },
                          "filter": {
                            "type": "string",
                            "id": 4,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. Use `filter` to return subset of rollouts.\nThe following filters are supported:\n-- To limit the results to only those in\n[status](google.api.servicemanagement.v1.RolloutStatus) 'SUCCESS',\nuse filter='status=SUCCESS'\n-- To limit the results to those in\n[status](google.api.servicemanagement.v1.RolloutStatus) 'CANCELLED'\nor 'FAILED', use filter='status=CANCELLED OR status=FAILED'"
                          }
                        },
                        "comment": "Request message for 'ListServiceRollouts'"
                      },
                      "ListServiceRolloutsResponse": {
                        "fields": {
                          "rollouts": {
                            "rule": "repeated",
                            "type": "Rollout",
                            "id": 1,
                            "comment": "The list of rollout resources."
                          },
                          "nextPageToken": {
                            "type": "string",
                            "id": 2,
                            "comment": "The token of the next page of results."
                          }
                        },
                        "comment": "Response message for ListServiceRollouts method."
                      },
                      "GetServiceRolloutRequest": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The name of the service.  See the [overview](/service-management/overview)\nfor naming requirements.  For example: `example.googleapis.com`."
                          },
                          "rolloutId": {
                            "type": "string",
                            "id": 2,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. The id of the rollout resource."
                          }
                        },
                        "comment": "Request message for GetServiceRollout method."
                      },
                      "GenerateConfigReportRequest": {
                        "fields": {
                          "newConfig": {
                            "type": "google.protobuf.Any",
                            "id": 1,
                            "options": {
                              "(google.api.field_behavior)": "REQUIRED"
                            },
                            "comment": "Required. Service configuration for which we want to generate the report.\nFor this version of API, the supported types are\n[google.api.servicemanagement.v1.ConfigRef][google.api.servicemanagement.v1.ConfigRef],\n[google.api.servicemanagement.v1.ConfigSource][google.api.servicemanagement.v1.ConfigSource],\nand [google.api.Service][google.api.Service]"
                          },
                          "oldConfig": {
                            "type": "google.protobuf.Any",
                            "id": 2,
                            "options": {
                              "(google.api.field_behavior)": "OPTIONAL"
                            },
                            "comment": "Optional. Service configuration against which the comparison will be done.\nFor this version of API, the supported types are\n[google.api.servicemanagement.v1.ConfigRef][google.api.servicemanagement.v1.ConfigRef],\n[google.api.servicemanagement.v1.ConfigSource][google.api.servicemanagement.v1.ConfigSource],\nand [google.api.Service][google.api.Service]"
                          }
                        },
                        "comment": "Request message for GenerateConfigReport method."
                      },
                      "GenerateConfigReportResponse": {
                        "fields": {
                          "serviceName": {
                            "type": "string",
                            "id": 1,
                            "comment": "Name of the service this report belongs to."
                          },
                          "id": {
                            "type": "string",
                            "id": 2,
                            "comment": "ID of the service configuration this report belongs to."
                          },
                          "changeReports": {
                            "rule": "repeated",
                            "type": "ChangeReport",
                            "id": 3,
                            "comment": "list of ChangeReport, each corresponding to comparison between two\nservice configurations."
                          },
                          "diagnostics": {
                            "rule": "repeated",
                            "type": "Diagnostic",
                            "id": 4,
                            "comment": "Errors / Linter warnings associated with the service definition this\nreport\nbelongs to."
                          }
                        },
                        "comment": "Response message for GenerateConfigReport method."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}