{
  "package": "google.api",
  "imports": [
    "google/api/auth.proto",
    "google/api/backend.proto",
    "google/api/billing.proto",
    "google/api/context.proto",
    "google/api/control.proto",
    "google/api/documentation.proto",
    "google/api/endpoint.proto",
    "google/api/http.proto",
    "google/api/label.proto",
    "google/api/log.proto",
    "google/api/logging.proto",
    "google/api/metric.proto",
    "google/api/monitored_resource.proto",
    "google/api/monitoring.proto",
    "google/api/quota.proto",
    "google/api/resource.proto",
    "google/api/source_info.proto",
    "google/api/system_parameter.proto",
    "google/api/usage.proto",
    "google/protobuf/any.proto",
    "google/protobuf/api.proto",
    "google/protobuf/type.proto",
    "google/protobuf/wrappers.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "google": {
        "nested": {
          "api": {
            "options": {
              "go_package": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig",
              "java_multiple_files": true,
              "java_outer_classname": "ServiceProto",
              "java_package": "com.google.api",
              "objc_class_prefix": "GAPI"
            },
            "nested": {
              "Service": {
                "fields": {
                  "name": {
                    "type": "string",
                    "id": 1,
                    "comment": "The service name, which is a DNS-like logical identifier for the\nservice, such as `calendar.googleapis.com`. The service name\ntypically goes through DNS verification to make sure the owner\nof the service also owns the DNS name."
                  },
                  "title": {
                    "type": "string",
                    "id": 2,
                    "comment": "The product title for this service."
                  },
                  "producerProjectId": {
                    "type": "string",
                    "id": 22,
                    "comment": "The Google project that owns this service."
                  },
                  "id": {
                    "type": "string",
                    "id": 33,
                    "comment": "A unique ID for a specific instance of this message, typically assigned\nby the client for tracking purpose. Must be no longer than 63 characters\nand only lower case letters, digits, '.', '_' and '-' are allowed. If\nempty, the server may choose to generate one instead."
                  },
                  "apis": {
                    "rule": "repeated",
                    "type": "google.protobuf.Api",
                    "id": 3,
                    "comment": "A list of API interfaces exported by this service. Only the `name` field\nof the [google.protobuf.Api][google.protobuf.Api] needs to be provided by the configuration\nauthor, as the remaining fields will be derived from the IDL during the\nnormalization process. It is an error to specify an API interface here\nwhich cannot be resolved against the associated IDL files."
                  },
                  "types": {
                    "rule": "repeated",
                    "type": "google.protobuf.Type",
                    "id": 4,
                    "comment": "A list of all proto message types included in this API service.\nTypes referenced directly or indirectly by the `apis` are\nautomatically included.  Messages which are not referenced but\nshall be included, such as types used by the `google.protobuf.Any` type,\nshould be listed here by name. Example:\n\ntypes:\n- name: google.protobuf.Int32"
                  },
                  "enums": {
                    "rule": "repeated",
                    "type": "google.protobuf.Enum",
                    "id": 5,
                    "comment": "A list of all enum types included in this API service.  Enums\nreferenced directly or indirectly by the `apis` are automatically\nincluded.  Enums which are not referenced but shall be included\nshould be listed here by name. Example:\n\nenums:\n- name: google.someapi.v1.SomeEnum"
                  },
                  "documentation": {
                    "type": "Documentation",
                    "id": 6,
                    "comment": "Additional API documentation."
                  },
                  "backend": {
                    "type": "Backend",
                    "id": 8,
                    "comment": "API backend configuration."
                  },
                  "http": {
                    "type": "Http",
                    "id": 9,
                    "comment": "HTTP configuration."
                  },
                  "quota": {
                    "type": "Quota",
                    "id": 10,
                    "comment": "Quota configuration."
                  },
                  "authentication": {
                    "type": "Authentication",
                    "id": 11,
                    "comment": "Auth configuration."
                  },
                  "context": {
                    "type": "Context",
                    "id": 12,
                    "comment": "Context configuration."
                  },
                  "usage": {
                    "type": "Usage",
                    "id": 15,
                    "comment": "Configuration controlling usage of this service."
                  },
                  "endpoints": {
                    "rule": "repeated",
                    "type": "Endpoint",
                    "id": 18,
                    "comment": "Configuration for network endpoints.  If this is empty, then an endpoint\nwith the same name as the service is automatically generated to service all\ndefined APIs."
                  },
                  "control": {
                    "type": "Control",
                    "id": 21,
                    "comment": "Configuration for the service control plane."
                  },
                  "logs": {
                    "rule": "repeated",
                    "type": "LogDescriptor",
                    "id": 23,
                    "comment": "Defines the logs used by this service."
                  },
                  "metrics": {
                    "rule": "repeated",
                    "type": "MetricDescriptor",
                    "id": 24,
                    "comment": "Defines the metrics used by this service."
                  },
                  "monitoredResources": {
                    "rule": "repeated",
                    "type": "MonitoredResourceDescriptor",
                    "id": 25,
                    "comment": "Defines the monitored resources used by this service. This is required\nby the [Service.monitoring][google.api.Service.monitoring] and [Service.logging][google.api.Service.logging] configurations."
                  },
                  "billing": {
                    "type": "Billing",
                    "id": 26,
                    "comment": "Billing configuration."
                  },
                  "logging": {
                    "type": "Logging",
                    "id": 27,
                    "comment": "Logging configuration."
                  },
                  "monitoring": {
                    "type": "Monitoring",
                    "id": 28,
                    "comment": "Monitoring configuration."
                  },
                  "systemParameters": {
                    "type": "SystemParameters",
                    "id": 29,
                    "comment": "System parameter configuration."
                  },
                  "sourceInfo": {
                    "type": "SourceInfo",
                    "id": 37,
                    "comment": "Output only. The source information for this configuration if available."
                  },
                  "configVersion": {
                    "type": "google.protobuf.UInt32Value",
                    "id": 20,
                    "options": {
                      "deprecated": true
                    },
                    "comment": "Obsolete. Do not use.\n\nThis field has no semantic meaning. The service config compiler always\nsets this field to `3`."
                  }
                },
                "comment": "`Service` is the root object of Google service configuration schema. It\ndescribes basic information about a service, such as the name and the\ntitle, and delegates other aspects to sub-sections. Each sub-section is\neither a proto message or a repeated proto message that configures a\nspecific aspect, such as auth. See each proto message definition for details.\n\nExample:\n\ntype: google.api.Service\nname: calendar.googleapis.com\ntitle: Google Calendar API\napis:\n- name: google.calendar.v3.Calendar\nauthentication:\nproviders:\n- id: google_calendar_auth\njwks_uri: https://www.googleapis.com/oauth2/v1/certs\nissuer: https://securetoken.google.com\nrules:\n- selector: \"*\"\nrequirements:\nprovider_id: google_calendar_auth"
              }
            }
          }
        }
      }
    }
  }
}