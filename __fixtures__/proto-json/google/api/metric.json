{
  "package": "google.api",
  "imports": [
    "google/api/label.proto",
    "google/api/launch_stage.proto",
    "google/protobuf/duration.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "google": {
        "nested": {
          "api": {
            "options": {
              "go_package": "google.golang.org/genproto/googleapis/api/metric;metric",
              "java_multiple_files": true,
              "java_outer_classname": "MetricProto",
              "java_package": "com.google.api",
              "objc_class_prefix": "GAPI"
            },
            "nested": {
              "MetricDescriptor": {
                "fields": {
                  "name": {
                    "type": "string",
                    "id": 1,
                    "comment": "The resource name of the metric descriptor."
                  },
                  "type": {
                    "type": "string",
                    "id": 8,
                    "comment": "The metric type, including its DNS name prefix. The type is not\nURL-encoded. All user-defined metric types have the DNS name\n`custom.googleapis.com` or `external.googleapis.com`. Metric types should\nuse a natural hierarchical grouping. For example:\n\n\"custom.googleapis.com/invoice/paid/amount\"\n\"external.googleapis.com/prometheus/up\"\n\"appengine.googleapis.com/http/server/response_latencies\""
                  },
                  "labels": {
                    "rule": "repeated",
                    "type": "LabelDescriptor",
                    "id": 2,
                    "comment": "The set of labels that can be used to describe a specific\ninstance of this metric type. For example, the\n`appengine.googleapis.com/http/server/response_latencies` metric\ntype has a label for the HTTP response code, `response_code`, so\nyou can look at latencies for successful responses or just\nfor responses that failed."
                  },
                  "metricKind": {
                    "type": "MetricKind",
                    "id": 3,
                    "comment": "Whether the metric records instantaneous values, changes to a value, etc.\nSome combinations of `metric_kind` and `value_type` might not be supported."
                  },
                  "valueType": {
                    "type": "ValueType",
                    "id": 4,
                    "comment": "Whether the measurement is an integer, a floating-point number, etc.\nSome combinations of `metric_kind` and `value_type` might not be supported."
                  },
                  "unit": {
                    "type": "string",
                    "id": 5,
                    "comment": "The units in which the metric value is reported. It is only applicable\nif the `value_type` is `INT64`, `DOUBLE`, or `DISTRIBUTION`. The `unit`\ndefines the representation of the stored metric values.\n\nDifferent systems might scale the values to be more easily displayed (so a\nvalue of `0.02kBy` _might_ be displayed as `20By`, and a value of\n`3523kBy` _might_ be displayed as `3.5MBy`). However, if the `unit` is\n`kBy`, then the value of the metric is always in thousands of bytes, no\nmatter how it might be displayed.\n\nIf you want a custom metric to record the exact number of CPU-seconds used\nby a job, you can create an `INT64 CUMULATIVE` metric whose `unit` is\n`s{CPU}` (or equivalently `1s{CPU}` or just `s`). If the job uses 12,005\nCPU-seconds, then the value is written as `12005`.\n\nAlternatively, if you want a custom metric to record data in a more\ngranular way, you can create a `DOUBLE CUMULATIVE` metric whose `unit` is\n`ks{CPU}`, and then write the value `12.005` (which is `12005/1000`),\nor use `Kis{CPU}` and write `11.723` (which is `12005/1024`).\n\nThe supported units are a subset of [The Unified Code for Units of\nMeasure](https://unitsofmeasure.org/ucum.html) standard:\n\n**Basic units (UNIT)**\n\n* `bit`   bit\n* `By`    byte\n* `s`     second\n* `min`   minute\n* `h`     hour\n* `d`     day\n* `1`     dimensionless\n\n**Prefixes (PREFIX)**\n\n* `k`     kilo    (10^3)\n* `M`     mega    (10^6)\n* `G`     giga    (10^9)\n* `T`     tera    (10^12)\n* `P`     peta    (10^15)\n* `E`     exa     (10^18)\n* `Z`     zetta   (10^21)\n* `Y`     yotta   (10^24)\n\n* `m`     milli   (10^-3)\n* `u`     micro   (10^-6)\n* `n`     nano    (10^-9)\n* `p`     pico    (10^-12)\n* `f`     femto   (10^-15)\n* `a`     atto    (10^-18)\n* `z`     zepto   (10^-21)\n* `y`     yocto   (10^-24)\n\n* `Ki`    kibi    (2^10)\n* `Mi`    mebi    (2^20)\n* `Gi`    gibi    (2^30)\n* `Ti`    tebi    (2^40)\n* `Pi`    pebi    (2^50)\n\n**Grammar**\n\nThe grammar also includes these connectors:\n\n* `/`    division or ratio (as an infix operator). For examples,\n`kBy/{email}` or `MiBy/10ms` (although you should almost never\nhave `/s` in a metric `unit`; rates should always be computed at\nquery time from the underlying cumulative or delta value).\n* `.`    multiplication or composition (as an infix operator). For\nexamples, `GBy.d` or `k{watt}.h`.\n\nThe grammar for a unit is as follows:\n\nExpression = Component { \".\" Component } { \"/\" Component } ;\n\nComponent = ( [ PREFIX ] UNIT | \"%\" ) [ Annotation ]\n| Annotation\n| \"1\"\n;\n\nAnnotation = \"{\" NAME \"}\" ;\n\nNotes:\n\n* `Annotation` is just a comment if it follows a `UNIT`. If the annotation\nis used alone, then the unit is equivalent to `1`. For examples,\n`{request}/s == 1/s`, `By{transmitted}/s == By/s`.\n* `NAME` is a sequence of non-blank printable ASCII characters not\ncontaining `{` or `}`.\n* `1` represents a unitary [dimensionless\nunit](https://en.wikipedia.org/wiki/Dimensionless_quantity) of 1, such\nas in `1/s`. It is typically used when none of the basic units are\nappropriate. For example, \"new users per day\" can be represented as\n`1/d` or `{new-users}/d` (and a metric value `5` would mean \"5 new\nusers). Alternatively, \"thousands of page views per day\" would be\nrepresented as `1000/d` or `k1/d` or `k{page_views}/d` (and a metric\nvalue of `5.3` would mean \"5300 page views per day\").\n* `%` represents dimensionless value of 1/100, and annotates values giving\na percentage (so the metric values are typically in the range of 0..100,\nand a metric value `3` means \"3 percent\").\n* `10^2.%` indicates a metric contains a ratio, typically in the range\n0..1, that will be multiplied by 100 and displayed as a percentage\n(so a metric value `0.03` means \"3 percent\")."
                  },
                  "description": {
                    "type": "string",
                    "id": 6,
                    "comment": "A detailed description of the metric, which can be used in documentation."
                  },
                  "displayName": {
                    "type": "string",
                    "id": 7,
                    "comment": "A concise name for the metric, which can be displayed in user interfaces.\nUse sentence case without an ending period, for example \"Request count\".\nThis field is optional but it is recommended to be set for any metrics\nassociated with user-visible concepts, such as Quota."
                  },
                  "metadata": {
                    "type": "MetricDescriptorMetadata",
                    "id": 10,
                    "comment": "Optional. Metadata which can be used to guide usage of the metric."
                  },
                  "launchStage": {
                    "type": "LaunchStage",
                    "id": 12,
                    "comment": "Optional. The launch stage of the metric definition."
                  },
                  "monitoredResourceTypes": {
                    "rule": "repeated",
                    "type": "string",
                    "id": 13,
                    "comment": "Read-only. If present, then a [time\nseries][google.monitoring.v3.TimeSeries], which is identified partially by\na metric type and a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor], that is associated\nwith this metric type can only be associated with one of the monitored\nresource types listed here."
                  }
                },
                "nested": {
                  "MetricDescriptorMetadata": {
                    "fields": {
                      "launchStage": {
                        "type": "LaunchStage",
                        "id": 1,
                        "options": {
                          "deprecated": true
                        },
                        "comment": "Deprecated. Must use the [MetricDescriptor.launch_stage][google.api.MetricDescriptor.launch_stage] instead."
                      },
                      "samplePeriod": {
                        "type": "google.protobuf.Duration",
                        "id": 2,
                        "comment": "The sampling period of metric data points. For metrics which are written\nperiodically, consecutive data points are stored at this time interval,\nexcluding data loss due to errors. Metrics with a higher granularity have\na smaller sampling period."
                      },
                      "ingestDelay": {
                        "type": "google.protobuf.Duration",
                        "id": 3,
                        "comment": "The delay of data points caused by ingestion. Data points older than this\nage are guaranteed to be ingested and available to be read, excluding\ndata loss due to errors."
                      }
                    },
                    "comment": "Additional annotations that can be used to guide the usage of a metric."
                  },
                  "MetricKind": {
                    "values": {
                      "METRIC_KIND_UNSPECIFIED": 0,
                      "GAUGE": 1,
                      "DELTA": 2,
                      "CUMULATIVE": 3
                    },
                    "comment": "The kind of measurement. It describes how the data is reported.\nFor information on setting the start time and end time based on\nthe MetricKind, see [TimeInterval][google.monitoring.v3.TimeInterval].",
                    "comments": {
                      "METRIC_KIND_UNSPECIFIED": "Do not use this default value.",
                      "GAUGE": "An instantaneous measurement of a value.",
                      "DELTA": "The change in a value during a time interval.",
                      "CUMULATIVE": "A value accumulated over a time interval.  Cumulative\nmeasurements in a time series should have the same start time\nand increasing end times, until an event resets the cumulative\nvalue to zero and sets a new start time for the following\npoints."
                    }
                  },
                  "ValueType": {
                    "values": {
                      "VALUE_TYPE_UNSPECIFIED": 0,
                      "BOOL": 1,
                      "INT64": 2,
                      "DOUBLE": 3,
                      "STRING": 4,
                      "DISTRIBUTION": 5,
                      "MONEY": 6
                    },
                    "comment": "The value type of a metric.",
                    "comments": {
                      "VALUE_TYPE_UNSPECIFIED": "Do not use this default value.",
                      "BOOL": "The value is a boolean.\nThis value type can be used only if the metric kind is `GAUGE`.",
                      "INT64": "The value is a signed 64-bit integer.",
                      "DOUBLE": "The value is a double precision floating point number.",
                      "STRING": "The value is a text string.\nThis value type can be used only if the metric kind is `GAUGE`.",
                      "DISTRIBUTION": "The value is a [`Distribution`][google.api.Distribution].",
                      "MONEY": "The value is money."
                    }
                  }
                },
                "comment": "Defines a metric type and its schema. Once a metric descriptor is created,\ndeleting or altering it stops data collection and makes the metric type's\nexisting data unusable."
              },
              "Metric": {
                "fields": {
                  "type": {
                    "type": "string",
                    "id": 3,
                    "comment": "An existing metric type, see [google.api.MetricDescriptor][google.api.MetricDescriptor].\nFor example, `custom.googleapis.com/invoice/paid/amount`."
                  },
                  "labels": {
                    "keyType": "string",
                    "type": "string",
                    "id": 2,
                    "comment": "The set of label values that uniquely identify this metric. All\nlabels listed in the `MetricDescriptor` must be assigned values."
                  }
                },
                "comment": "A specific metric, identified by specifying values for all of the\nlabels of a [`MetricDescriptor`][google.api.MetricDescriptor]."
              }
            }
          }
        }
      }
    }
  }
}