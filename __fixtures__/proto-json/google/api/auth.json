{
  "package": "google.api",
  "syntax": "proto3",
  "root": {
    "nested": {
      "google": {
        "nested": {
          "api": {
            "options": {
              "go_package": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig",
              "java_multiple_files": true,
              "java_outer_classname": "AuthProto",
              "java_package": "com.google.api",
              "objc_class_prefix": "GAPI"
            },
            "nested": {
              "Authentication": {
                "fields": {
                  "rules": {
                    "rule": "repeated",
                    "type": "AuthenticationRule",
                    "id": 3,
                    "comment": "A list of authentication rules that apply to individual API methods.\n\n**NOTE:** All service configuration rules follow \"last one wins\" order."
                  },
                  "providers": {
                    "rule": "repeated",
                    "type": "AuthProvider",
                    "id": 4,
                    "comment": "Defines a set of authentication providers that a service supports."
                  }
                },
                "comment": "`Authentication` defines the authentication configuration for API methods\nprovided by an API service.\n\nExample:\n\nname: calendar.googleapis.com\nauthentication:\nproviders:\n- id: google_calendar_auth\njwks_uri: https://www.googleapis.com/oauth2/v1/certs\nissuer: https://securetoken.google.com\nrules:\n- selector: \"*\"\nrequirements:\nprovider_id: google_calendar_auth\n- selector: google.calendar.Delegate\noauth:\ncanonical_scopes: https://www.googleapis.com/auth/calendar.read"
              },
              "AuthenticationRule": {
                "fields": {
                  "selector": {
                    "type": "string",
                    "id": 1,
                    "comment": "Selects the methods to which this rule applies.\n\nRefer to [selector][google.api.DocumentationRule.selector] for syntax details."
                  },
                  "oauth": {
                    "type": "OAuthRequirements",
                    "id": 2,
                    "comment": "The requirements for OAuth credentials."
                  },
                  "allowWithoutCredential": {
                    "type": "bool",
                    "id": 5,
                    "comment": "If true, the service accepts API keys without any other credential.\nThis flag only applies to HTTP and gRPC requests."
                  },
                  "requirements": {
                    "rule": "repeated",
                    "type": "AuthRequirement",
                    "id": 7,
                    "comment": "Requirements for additional authentication providers."
                  }
                },
                "comment": "Authentication rules for the service.\n\nBy default, if a method has any authentication requirements, every request\nmust include a valid credential matching one of the requirements.\nIt's an error to include more than one kind of credential in a single\nrequest.\n\nIf a method doesn't have any auth requirements, request credentials will be\nignored."
              },
              "JwtLocation": {
                "oneofs": {
                  "in": {
                    "oneof": [
                      "header",
                      "query"
                    ],
                    "comment": null
                  }
                },
                "fields": {
                  "header": {
                    "type": "string",
                    "id": 1,
                    "comment": "Specifies HTTP header name to extract JWT token."
                  },
                  "query": {
                    "type": "string",
                    "id": 2,
                    "comment": "Specifies URL query parameter name to extract JWT token."
                  },
                  "valuePrefix": {
                    "type": "string",
                    "id": 3,
                    "comment": "The value prefix. The value format is \"value_prefix{token}\"\nOnly applies to \"in\" header type. Must be empty for \"in\" query type.\nIf not empty, the header value has to match (case sensitive) this prefix.\nIf not matched, JWT will not be extracted. If matched, JWT will be\nextracted after the prefix is removed.\n\nFor example, for \"Authorization: Bearer {JWT}\",\nvalue_prefix=\"Bearer \" with a space at the end."
                  }
                },
                "comment": "Specifies a location to extract JWT from an API request."
              },
              "AuthProvider": {
                "fields": {
                  "id": {
                    "type": "string",
                    "id": 1,
                    "comment": "The unique identifier of the auth provider. It will be referred to by\n`AuthRequirement.provider_id`.\n\nExample: \"bookstore_auth\"."
                  },
                  "issuer": {
                    "type": "string",
                    "id": 2,
                    "comment": "Identifies the principal that issued the JWT. See\nhttps://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.1\nUsually a URL or an email address.\n\nExample: https://securetoken.google.com\nExample: 1234567-compute@developer.gserviceaccount.com"
                  },
                  "jwksUri": {
                    "type": "string",
                    "id": 3,
                    "comment": "URL of the provider's public key set to validate signature of the JWT. See\n[OpenID\nDiscovery](https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderMetadata).\nOptional if the key set document:\n- can be retrieved from\n[OpenID\nDiscovery](https://openid.net/specs/openid-connect-discovery-1_0.html)\nof the issuer.\n- can be inferred from the email domain of the issuer (e.g. a Google\nservice account).\n\nExample: https://www.googleapis.com/oauth2/v1/certs"
                  },
                  "audiences": {
                    "type": "string",
                    "id": 4,
                    "comment": "The list of JWT\n[audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).\nthat are allowed to access. A JWT containing any of these audiences will\nbe accepted. When this setting is absent, JWTs with audiences:\n- \"https://[service.name]/[google.protobuf.Api.name]\"\n- \"https://[service.name]/\"\nwill be accepted.\nFor example, if no audiences are in the setting, LibraryService API will\naccept JWTs with the following audiences:\n-\nhttps://library-example.googleapis.com/google.example.library.v1.LibraryService\n- https://library-example.googleapis.com/\n\nExample:\n\naudiences: bookstore_android.apps.googleusercontent.com,\nbookstore_web.apps.googleusercontent.com"
                  },
                  "authorizationUrl": {
                    "type": "string",
                    "id": 5,
                    "comment": "Redirect URL if JWT token is required but not present or is expired.\nImplement authorizationUrl of securityDefinitions in OpenAPI spec."
                  },
                  "jwtLocations": {
                    "rule": "repeated",
                    "type": "JwtLocation",
                    "id": 6,
                    "comment": "Defines the locations to extract the JWT.\n\nJWT locations can be either from HTTP headers or URL query parameters.\nThe rule is that the first match wins. The checking order is: checking\nall headers first, then URL query parameters.\n\nIf not specified,  default to use following 3 locations:\n1) Authorization: Bearer\n2) x-goog-iap-jwt-assertion\n3) access_token query parameter\n\nDefault locations can be specified as followings:\njwt_locations:\n- header: Authorization\nvalue_prefix: \"Bearer \"\n- header: x-goog-iap-jwt-assertion\n- query: access_token"
                  }
                },
                "comment": "Configuration for an authentication provider, including support for\n[JSON Web Token\n(JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32)."
              },
              "OAuthRequirements": {
                "fields": {
                  "canonicalScopes": {
                    "type": "string",
                    "id": 1,
                    "comment": "The list of publicly documented OAuth scopes that are allowed access. An\nOAuth token containing any of these scopes will be accepted.\n\nExample:\n\ncanonical_scopes: https://www.googleapis.com/auth/calendar,\nhttps://www.googleapis.com/auth/calendar.read"
                  }
                },
                "comment": "OAuth scopes are a way to define data and permissions on data. For example,\nthere are scopes defined for \"Read-only access to Google Calendar\" and\n\"Access to Cloud Platform\". Users can consent to a scope for an application,\ngiving it permission to access that data on their behalf.\n\nOAuth scope specifications should be fairly coarse grained; a user will need\nto see and understand the text description of what your scope means.\n\nIn most cases: use one or at most two OAuth scopes for an entire family of\nproducts. If your product has multiple APIs, you should probably be sharing\nthe OAuth scope across all of those APIs.\n\nWhen you need finer grained OAuth consent screens: talk with your product\nmanagement about how developers will use them in practice.\n\nPlease note that even though each of the canonical scopes is enough for a\nrequest to be accepted and passed to the backend, a request can still fail\ndue to the backend requiring additional scopes or permissions."
              },
              "AuthRequirement": {
                "fields": {
                  "providerId": {
                    "type": "string",
                    "id": 1,
                    "comment": "[id][google.api.AuthProvider.id] from authentication provider.\n\nExample:\n\nprovider_id: bookstore_auth"
                  },
                  "audiences": {
                    "type": "string",
                    "id": 2,
                    "comment": "NOTE: This will be deprecated soon, once AuthProvider.audiences is\nimplemented and accepted in all the runtime components.\n\nThe list of JWT\n[audiences](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32#section-4.1.3).\nthat are allowed to access. A JWT containing any of these audiences will\nbe accepted. When this setting is absent, only JWTs with audience\n\"https://[Service_name][google.api.Service.name]/[API_name][google.protobuf.Api.name]\"\nwill be accepted. For example, if no audiences are in the setting,\nLibraryService API will only accept JWTs with the following audience\n\"https://library-example.googleapis.com/google.example.library.v1.LibraryService\".\n\nExample:\n\naudiences: bookstore_android.apps.googleusercontent.com,\nbookstore_web.apps.googleusercontent.com"
                  }
                },
                "comment": "User-defined authentication requirements, including support for\n[JSON Web Token\n(JWT)](https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-32)."
              }
            }
          }
        }
      }
    }
  }
}