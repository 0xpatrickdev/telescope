{
  "package": "google.api.expr.v1beta1",
  "imports": [
    "google/api/expr/v1beta1/value.proto",
    "google/rpc/status.proto"
  ],
  "syntax": "proto3",
  "root": {
    "nested": {
      "google": {
        "nested": {
          "api": {
            "nested": {
              "expr": {
                "nested": {
                  "v1beta1": {
                    "options": {
                      "cc_enable_arenas": true,
                      "go_package": "google.golang.org/genproto/googleapis/api/expr/v1beta1;expr",
                      "java_multiple_files": true,
                      "java_outer_classname": "EvalProto",
                      "java_package": "com.google.api.expr.v1beta1"
                    },
                    "nested": {
                      "EvalState": {
                        "fields": {
                          "values": {
                            "rule": "repeated",
                            "type": "ExprValue",
                            "id": 1,
                            "comment": "The unique values referenced in this message."
                          },
                          "results": {
                            "rule": "repeated",
                            "type": "Result",
                            "id": 3,
                            "comment": "An ordered list of results.\n\nTracks the flow of evaluation through the expression.\nMay be sparse."
                          }
                        },
                        "nested": {
                          "Result": {
                            "fields": {
                              "expr": {
                                "type": "IdRef",
                                "id": 1,
                                "comment": "The expression this result is for."
                              },
                              "value": {
                                "type": "int32",
                                "id": 2,
                                "comment": "The index in `values` of the resulting value."
                              }
                            },
                            "comment": "A single evaluation result."
                          }
                        },
                        "comment": "The state of an evaluation.\n\nCan represent an initial, partial, or completed state of evaluation."
                      },
                      "ExprValue": {
                        "oneofs": {
                          "kind": {
                            "oneof": [
                              "value",
                              "error",
                              "unknown"
                            ],
                            "comment": "An expression can resolve to a value, error or unknown."
                          }
                        },
                        "fields": {
                          "value": {
                            "type": "Value",
                            "id": 1,
                            "comment": "A concrete value."
                          },
                          "error": {
                            "type": "ErrorSet",
                            "id": 2,
                            "comment": "The set of errors in the critical path of evalution.\n\nOnly errors in the critical path are included. For example,\n`(<error1> || true) && <error2>` will only result in `<error2>`,\nwhile `<error1> || <error2>` will result in both `<error1>` and\n`<error2>`.\n\nErrors cause by the presence of other errors are not included in the\nset. For example `<error1>.foo`, `foo(<error1>)`, and `<error1> + 1` will\nonly result in `<error1>`.\n\nMultiple errors *might* be included when evaluation could result\nin different errors. For example `<error1> + <error2>` and\n`foo(<error1>, <error2>)` may result in `<error1>`, `<error2>` or both.\nThe exact subset of errors included for this case is unspecified and\ndepends on the implementation details of the evaluator."
                          },
                          "unknown": {
                            "type": "UnknownSet",
                            "id": 3,
                            "comment": "The set of unknowns in the critical path of evaluation.\n\nUnknown behaves identically to Error with regards to propagation.\nSpecifically, only unknowns in the critical path are included, unknowns\ncaused by the presence of other unknowns are not included, and multiple\nunknowns *might* be included included when evaluation could result in\ndifferent unknowns. For example:\n\n(<unknown[1]> || true) && <unknown[2]> -> <unknown[2]>\n<unknown[1]> || <unknown[2]> -> <unknown[1,2]>\n<unknown[1]>.foo -> <unknown[1]>\nfoo(<unknown[1]>) -> <unknown[1]>\n<unknown[1]> + <unknown[2]> -> <unknown[1]> or <unknown[2[>\n\nUnknown takes precidence over Error in cases where a `Value` can short\ncircuit the result:\n\n<error> || <unknown> -> <unknown>\n<error> && <unknown> -> <unknown>\n\nErrors take precidence in all other cases:\n\n<unknown> + <error> -> <error>\nfoo(<unknown>, <error>) -> <error>"
                          }
                        },
                        "comment": "The value of an evaluated expression."
                      },
                      "ErrorSet": {
                        "fields": {
                          "errors": {
                            "rule": "repeated",
                            "type": "google.rpc.Status",
                            "id": 1,
                            "comment": "The errors in the set."
                          }
                        },
                        "comment": "A set of errors.\n\nThe errors included depend on the context. See `ExprValue.error`."
                      },
                      "UnknownSet": {
                        "fields": {
                          "exprs": {
                            "rule": "repeated",
                            "type": "IdRef",
                            "id": 1,
                            "comment": "The ids of the expressions with unknown values."
                          }
                        },
                        "comment": "A set of expressions for which the value is unknown.\n\nThe unknowns included depend on the context. See `ExprValue.unknown`."
                      },
                      "IdRef": {
                        "fields": {
                          "id": {
                            "type": "int32",
                            "id": 1,
                            "comment": "The expression id."
                          }
                        },
                        "comment": "A reference to an expression id."
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}