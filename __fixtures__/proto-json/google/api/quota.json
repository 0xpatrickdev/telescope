{
  "package": "google.api",
  "syntax": "proto3",
  "root": {
    "nested": {
      "google": {
        "nested": {
          "api": {
            "options": {
              "go_package": "google.golang.org/genproto/googleapis/api/serviceconfig;serviceconfig",
              "java_multiple_files": true,
              "java_outer_classname": "QuotaProto",
              "java_package": "com.google.api",
              "objc_class_prefix": "GAPI"
            },
            "nested": {
              "Quota": {
                "fields": {
                  "limits": {
                    "rule": "repeated",
                    "type": "QuotaLimit",
                    "id": 3,
                    "comment": "List of `QuotaLimit` definitions for the service."
                  },
                  "metricRules": {
                    "rule": "repeated",
                    "type": "MetricRule",
                    "id": 4,
                    "comment": "List of `MetricRule` definitions, each one mapping a selected method to one\nor more metrics."
                  }
                },
                "comment": "Quota configuration helps to achieve fairness and budgeting in service\nusage.\n\nThe metric based quota configuration works this way:\n- The service configuration defines a set of metrics.\n- For API calls, the quota.metric_rules maps methods to metrics with\ncorresponding costs.\n- The quota.limits defines limits on the metrics, which will be used for\nquota checks at runtime.\n\nAn example quota configuration in yaml format:\n\nquota:\nlimits:\n\n- name: apiWriteQpsPerProject\nmetric: library.googleapis.com/write_calls\nunit: \"1/min/{project}\"  # rate limit for consumer projects\nvalues:\nSTANDARD: 10000\n\n\n# The metric rules bind all methods to the read_calls metric,\n# except for the UpdateBook and DeleteBook methods. These two methods\n# are mapped to the write_calls metric, with the UpdateBook method\n# consuming at twice rate as the DeleteBook method.\nmetric_rules:\n- selector: \"*\"\nmetric_costs:\nlibrary.googleapis.com/read_calls: 1\n- selector: google.example.library.v1.LibraryService.UpdateBook\nmetric_costs:\nlibrary.googleapis.com/write_calls: 2\n- selector: google.example.library.v1.LibraryService.DeleteBook\nmetric_costs:\nlibrary.googleapis.com/write_calls: 1\n\nCorresponding Metric definition:\n\nmetrics:\n- name: library.googleapis.com/read_calls\ndisplay_name: Read requests\nmetric_kind: DELTA\nvalue_type: INT64\n\n- name: library.googleapis.com/write_calls\ndisplay_name: Write requests\nmetric_kind: DELTA\nvalue_type: INT64"
              },
              "MetricRule": {
                "fields": {
                  "selector": {
                    "type": "string",
                    "id": 1,
                    "comment": "Selects the methods to which this rule applies.\n\nRefer to [selector][google.api.DocumentationRule.selector] for syntax details."
                  },
                  "metricCosts": {
                    "keyType": "string",
                    "type": "int64",
                    "id": 2,
                    "comment": "Metrics to update when the selected methods are called, and the associated\ncost applied to each metric.\n\nThe key of the map is the metric name, and the values are the amount\nincreased for the metric against which the quota limits are defined.\nThe value must not be negative."
                  }
                },
                "comment": "Bind API methods to metrics. Binding a method to a metric causes that\nmetric's configured quota behaviors to apply to the method call."
              },
              "QuotaLimit": {
                "fields": {
                  "name": {
                    "type": "string",
                    "id": 6,
                    "comment": "Name of the quota limit.\n\nThe name must be provided, and it must be unique within the service. The\nname can only include alphanumeric characters as well as '-'.\n\nThe maximum length of the limit name is 64 characters."
                  },
                  "description": {
                    "type": "string",
                    "id": 2,
                    "comment": "Optional. User-visible, extended description for this quota limit.\nShould be used only when more context is needed to understand this limit\nthan provided by the limit's display name (see: `display_name`)."
                  },
                  "defaultLimit": {
                    "type": "int64",
                    "id": 3,
                    "comment": "Default number of tokens that can be consumed during the specified\nduration. This is the number of tokens assigned when a client\napplication developer activates the service for his/her project.\n\nSpecifying a value of 0 will block all requests. This can be used if you\nare provisioning quota to selected consumers and blocking others.\nSimilarly, a value of -1 will indicate an unlimited quota. No other\nnegative values are allowed.\n\nUsed by group-based quotas only."
                  },
                  "maxLimit": {
                    "type": "int64",
                    "id": 4,
                    "comment": "Maximum number of tokens that can be consumed during the specified\nduration. Client application developers can override the default limit up\nto this maximum. If specified, this value cannot be set to a value less\nthan the default limit. If not specified, it is set to the default limit.\n\nTo allow clients to apply overrides with no upper bound, set this to -1,\nindicating unlimited maximum quota.\n\nUsed by group-based quotas only."
                  },
                  "freeTier": {
                    "type": "int64",
                    "id": 7,
                    "comment": "Free tier value displayed in the Developers Console for this limit.\nThe free tier is the number of tokens that will be subtracted from the\nbilled amount when billing is enabled.\nThis field can only be set on a limit with duration \"1d\", in a billable\ngroup; it is invalid on any other limit. If this field is not set, it\ndefaults to 0, indicating that there is no free tier for this service.\n\nUsed by group-based quotas only."
                  },
                  "duration": {
                    "type": "string",
                    "id": 5,
                    "comment": "Duration of this limit in textual notation. Must be \"100s\" or \"1d\".\n\nUsed by group-based quotas only."
                  },
                  "metric": {
                    "type": "string",
                    "id": 8,
                    "comment": "The name of the metric this quota limit applies to. The quota limits with\nthe same metric will be checked together during runtime. The metric must be\ndefined within the service config."
                  },
                  "unit": {
                    "type": "string",
                    "id": 9,
                    "comment": "Specify the unit of the quota limit. It uses the same syntax as\n[Metric.unit][]. The supported unit kinds are determined by the quota\nbackend system.\n\nHere are some examples:\n* \"1/min/{project}\" for quota per minute per project.\n\nNote: the order of unit components is insignificant.\nThe \"1\" at the beginning is required to follow the metric unit syntax."
                  },
                  "values": {
                    "keyType": "string",
                    "type": "int64",
                    "id": 10,
                    "comment": "Tiered limit values. You must specify this as a key:value pair, with an\ninteger value that is the maximum number of requests allowed for the\nspecified unit. Currently only STANDARD is supported."
                  },
                  "displayName": {
                    "type": "string",
                    "id": 12,
                    "comment": "User-visible display name for this limit.\nOptional. If not set, the UI will provide a default display name based on\nthe quota configuration. This field can be used to override the default\ndisplay name generated from the configuration."
                  }
                },
                "comment": "`QuotaLimit` defines a specific limit that applies over a specified duration\nfor a limit type. There can be at most one limit for a duration and limit\ntype combination defined within a `QuotaGroup`."
              }
            }
          }
        }
      }
    }
  }
}