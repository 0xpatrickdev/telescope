// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createStargateClient 1`] = `
"export const getSigningOsmosisClient = async ({
  rpcEndpoint,
  signer,
  defaultTypes = defaultRegistryTypes
}: {
  rpcEndpoint: string;
  signer: OfflineSigner;
  defaultTypes?: ReadonlyArray<[string, GeneratedType]>;
}) => {
  const {
    registry,
    aminoTypes
  } = getSigningOsmosisClientOptions({
    defaultTypes
  });
  const client = await SigningStargateClient.connectWithSigner(rpcEndpoint, signer, {
    registry,
    aminoTypes
  });
  return client;
};"
`;

exports[`createStargateClient 2`] = `
Object {
  "AminoTypes": true,
  "GeneratedType": true,
  "OfflineSigner": true,
  "ReadonlyArray": true,
  "Registry": true,
  "SigningStargateClient": true,
  "defaultRegistryTypes": true,
}
`;

exports[`createStargateClient w/o defaults 1`] = `
"export const getSigningOsmosisClient = async ({
  rpcEndpoint,
  signer
}: {
  rpcEndpoint: string;
  signer: OfflineSigner;
}) => {
  const {
    registry,
    aminoTypes
  } = getSigningOsmosisClientOptions();
  const client = await SigningStargateClient.connectWithSigner(rpcEndpoint, signer, {
    registry,
    aminoTypes
  });
  return client;
};"
`;

exports[`createStargateClient w/o defaults 2`] = `
"export const getSigningOsmosisClientOptions = (): {
  registry: Registry;
  aminoTypes: AminoTypes;
} => {
  const registry = new Registry([...otherpackage1.gamm.v1beta1.registry, ...otherpackage1.superfluid.v1beta1.registry, ...otherpackage1.lockup.registry]);
  const aminoTypes = new AminoTypes({ ...otherpackage1.gamm.v1beta1.AminoConverter,
    ...otherpackage1.superfluid.v1beta1.AminoConverter,
    ...otherpackage1.lockup.AminoConverter
  });
  return {
    registry,
    aminoTypes
  };
};"
`;

exports[`createStargateClient w/o defaults 3`] = `
Object {
  "AminoTypes": true,
  "GeneratedType": true,
  "OfflineSigner": true,
  "ReadonlyArray": true,
  "Registry": true,
  "SigningStargateClient": true,
}
`;

exports[`createStargateClientOptions 1`] = `
"export const getSigningOsmosisClientOptions = ({
  defaultTypes = defaultRegistryTypes
}: {
  defaultTypes?: ReadonlyArray<[string, GeneratedType]>;
} = {}): {
  registry: Registry;
  aminoTypes: AminoTypes;
} => {
  const registry = new Registry([...defaultTypes, ...somepackage1.gamm.v1beta1.registry, ...somepackage1.superfluid.v1beta1.registry, ...somepackage1.lockup.registry]);
  const aminoTypes = new AminoTypes({ ...somepackage1.gamm.v1beta1.AminoConverter,
    ...somepackage1.superfluid.v1beta1.AminoConverter,
    ...somepackage1.lockup.AminoConverter
  });
  return {
    registry,
    aminoTypes
  };
};"
`;

exports[`createStargateClientOptions 2`] = `
Object {
  "AminoTypes": true,
  "GeneratedType": true,
  "ReadonlyArray": true,
  "Registry": true,
  "SigningStargateClient": true,
  "defaultRegistryTypes": true,
}
`;
