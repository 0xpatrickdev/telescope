// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`createScopedRpcFactory 1`] = `
"export const createRpc = async ({
  rpc
}: {
  rpc: Rpc;
}) => ({
  cosmos: {
    bank: {
      v1beta1: new (await import("./proto/cosmos/bank/v1beta1/query.lcd")).RPCQueryClient(rpc)
    },
    gov: {
      v1beta1: new (await import("./proto/cosmos/bank/v1beta1/query.lcd")).RPCQueryClient(rpc)
    }
  },
  osmosis: {
    gamm: {
      v1beta1: new (await import("./proto/cosmos/bank/v1beta1/query.lcd")).RPCQueryClient(rpc)
    }
  }
});"
`;

exports[`createScopedRpcFactoryWithoutTm 1`] = `
"export const createRpcFactorizzleWithoutTM = async ({
  rpc
}: {
  rpc: Rpc;
}) => {
  return {
    cosmos: {
      bank: {
        v1beta1: (await import("./proto/cosmos/bank/v1beta1/query.lcd")).createClientImpl(rpc)
      },
      gov: {
        v1beta1: (await import("./proto/cosmos/bank/v1beta1/query.lcd")).createClientImpl(rpc)
      }
    },
    osmosis: {
      gamm: {
        v1beta1: (await import("./proto/cosmos/bank/v1beta1/query.lcd")).createClientImpl(rpc)
      }
    }
  };
};"
`;

exports[`createScopedRpcTmFactory 1`] = `
"export const createRpcFactorizzle = async ({
  rpcEndpoint
}: {
  rpcEndpoint: string | HttpEndpoint;
}) => {
  const cometClient = await connectComet(rpcEndpoint);
  const client = new QueryClient(cometClient);
  return {
    cosmos: {
      bank: {
        v1beta1: (await import("./proto/cosmos/bank/v1beta1/query.lcd")).createRpcQueryExtension(client)
      },
      gov: {
        v1beta1: (await import("./proto/cosmos/bank/v1beta1/query.lcd")).createRpcQueryExtension(client)
      }
    },
    osmosis: {
      gamm: {
        v1beta1: (await import("./proto/cosmos/bank/v1beta1/query.lcd")).createRpcQueryExtension(client)
      }
    }
  };
};"
`;

exports[`rpcRecursiveObjectProps 1`] = `
"{
  cosmos: {
    bank: {
      v1beta1: v1beta1
    }
  }
}"
`;
