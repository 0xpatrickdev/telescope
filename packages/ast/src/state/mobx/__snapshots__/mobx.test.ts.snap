// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`builds stores. 1`] = `
"export const createRpcQueryMobxStores = (rpc: ProtobufRpcClient | undefined) => {
  const queryService = getQueryService(rpc);
  class QueryAccountsStore {
    store = new QueryStore<QueryAccountsRequest, QueryAccountsResponse>(queryService?.accounts);
    accounts(request) {
      return this.store.getData(request);
    }
  }
  class QueryAccountStore {
    store = new QueryStore<QueryAccountRequest, QueryAccountResponse>(queryService?.account);
    account(request) {
      return this.store.getData(request);
    }
  }
  class QueryParamsStore {
    store = new QueryStore<QueryParamsRequest, QueryParamsResponse>(queryService?.params);
    params(request) {
      return this.store.getData(request);
    }
  }
  class QueryModuleAccountsStore {
    store = new QueryStore<QueryModuleAccountsRequest, QueryModuleAccountsResponse>(queryService?.moduleAccounts);
    moduleAccounts(request) {
      return this.store.getData(request);
    }
  }
  class QueryBech32PrefixStore {
    store = new QueryStore<Bech32PrefixRequest, Bech32PrefixResponse>(queryService?.bech32Prefix);
    bech32Prefix(request) {
      return this.store.getData(request);
    }
  }
  class QueryAddressBytesToStringStore {
    store = new QueryStore<AddressBytesToStringRequest, AddressBytesToStringResponse>(queryService?.addressBytesToString);
    addressBytesToString(request) {
      return this.store.getData(request);
    }
  }
  class QueryAddressStringToBytesStore {
    store = new QueryStore<AddressStringToBytesRequest, AddressStringToBytesResponse>(queryService?.addressStringToBytes);
    addressStringToBytes(request) {
      return this.store.getData(request);
    }
  }
  return {
    /**
     * Accounts returns all the existing accounts
     * 
     * Since: cosmos-sdk 0.43
     */
    QueryAccountsStore,
    /** Account returns account details based on address. */QueryAccountStore,
    /** Params queries all parameters. */QueryParamsStore,
    /** ModuleAccounts returns all the existing module accounts. */QueryModuleAccountsStore,
    /** Bech32 queries bech32Prefix */QueryBech32PrefixStore,
    /** AddressBytesToString converts Account Address bytes to string */QueryAddressBytesToStringStore,
    /** AddressStringToBytes converts Address string to bytes */QueryAddressStringToBytesStore
  };
};"
`;
